<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://linbei.top/"/>
  <updated>2020-05-23T01:20:25.689Z</updated>
  <id>https://linbei.top/</id>
  
  <author>
    <name>Mr Han</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>80端口解决方法</title>
    <link href="https://linbei.top/%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://linbei.top/%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2020-05-20T04:12:57.000Z</published>
    <updated>2020-05-23T01:20:25.689Z</updated>
    
    <content type="html"><![CDATA[<p>遇到端口被占用问题是有一次服务器重启了，然后nginx没有设为开机自动启动，导致有些在线程序崩掉后才发现的。当尝试再次启动nginx时，发现nginx死活启动不起来。所以就怀疑是有其他进程占用了80端口。所以带着问题尝试去解决。本次实验是在win系统下进行的。<br>首先使用netstat -ano 命令查看是哪个进程正在占用80端口</p><a id="more"></a><img src="/%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/2020-05-20-20-45-01.png" class><p>PID为4的进程正在占用80端口。尝试用taskkill指令杀死此进程，确发现此为system进程，无法直接结束进程。<br>使用netsh命令查看http端口使用状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh http show servicetstate</span><br></pre></td></tr></table></figure><img src="/%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/2020-05-20-20-47-30.png" class><img src="/%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/2020-05-20-20-48-48.png" class><p>然后在任务管理器中查找该线程id,并将其关闭</p><p>然后就可以重新启动nginx了 启动命令为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx start</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;遇到端口被占用问题是有一次服务器重启了，然后nginx没有设为开机自动启动，导致有些在线程序崩掉后才发现的。当尝试再次启动nginx时，发现nginx死活启动不起来。所以就怀疑是有其他进程占用了80端口。所以带着问题尝试去解决。本次实验是在win系统下进行的。&lt;br&gt;首先使用netstat -ano 命令查看是哪个进程正在占用80端口&lt;/p&gt;
    
    </summary>
    
    
      <category term="运维" scheme="https://linbei.top/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="部署" scheme="https://linbei.top/tags/%E9%83%A8%E7%BD%B2/"/>
    
      <category term="win" scheme="https://linbei.top/tags/win/"/>
    
  </entry>
  
  <entry>
    <title>Redis一主二从三哨兵</title>
    <link href="https://linbei.top/Redis%E4%B8%80%E4%B8%BB%E4%BA%8C%E4%BB%8E%E4%B8%89%E5%93%A8%E5%85%B5/"/>
    <id>https://linbei.top/Redis%E4%B8%80%E4%B8%BB%E4%BA%8C%E4%BB%8E%E4%B8%89%E5%93%A8%E5%85%B5/</id>
    <published>2020-05-16T10:12:57.000Z</published>
    <updated>2020-05-23T01:20:25.595Z</updated>
    
    <content type="html"><![CDATA[<p>本文简单讲述主从建立和哨兵的配置。本机测试redis为Redis-x64-3.2.100<a href="https://github.com/MicrosoftArchive/redis/releases" target="_blank" rel="noopener">Windows下载地址</a>，使用二台服务器作为测试。</p><a id="more"></a><h2 id="下载解压"><a href="#下载解压" class="headerlink" title="下载解压"></a>下载解压</h2><p>下载完成后进行解压，然后复制两份作为从成员，构成一主二从。在主服务器上使用一份，从服务器上使用二份。</p><img src="/Redis%E4%B8%80%E4%B8%BB%E4%BA%8C%E4%BB%8E%E4%B8%89%E5%93%A8%E5%85%B5/2020-05-16-16-21-15.png" class><img src="/Redis%E4%B8%80%E4%B8%BB%E4%BA%8C%E4%BB%8E%E4%B8%89%E5%93%A8%E5%85%B5/2020-05-16-15-44-27.png" class><h2 id="主从配置"><a href="#主从配置" class="headerlink" title="主从配置"></a>主从配置</h2><h3 id="主redis配置"><a href="#主redis配置" class="headerlink" title="主redis配置"></a>主redis配置</h3><p>编辑文件夹下redis.windows.conf文件，设置bind和port，因为要用到远程连接，所以绑定的ip 127.0.0.1要注释掉，否则远程是无法访问的。端口就使用默认的6379，注意要把阿里云后台的端口限制防火墙打开。</p><img src="/Redis%E4%B8%80%E4%B8%BB%E4%BA%8C%E4%BB%8E%E4%B8%89%E5%93%A8%E5%85%B5/2020-05-16-15-48-27.png" class><h3 id="从redis配置"><a href="#从redis配置" class="headerlink" title="从redis配置"></a>从redis配置</h3><p>从redis配置：同样编辑文件夹下redis.windows.conf文件，设置bind和port。bind127.0.0.1同样注释掉，port分别是6380和6381。做完以上操作，如何标志这两redis是从关系呢？所以，还需要在配置文件中加上一行配置。注意：两个从redis都是相同的配置语句，因为都从属于同一个主redis。</p><img src="/Redis%E4%B8%80%E4%B8%BB%E4%BA%8C%E4%BB%8E%E4%B8%89%E5%93%A8%E5%85%B5/2020-05-16-15-51-05.png" class><p>由于我开启了密码登录验证，所以masterauth要添加上。</p><h2 id="主从启动"><a href="#主从启动" class="headerlink" title="主从启动"></a>主从启动</h2><p>在文件加中使用cmd进入命令窗口，输入redis-server redis.windows.conf即可启动（redis-server.exe和redis.windows.conf文件在相同文件夹下），依次启动主和从redis。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server redis.windows.conf</span><br></pre></td></tr></table></figure><img src="/Redis%E4%B8%80%E4%B8%BB%E4%BA%8C%E4%BB%8E%E4%B8%89%E5%93%A8%E5%85%B5/2020-05-16-15-53-11.png" class><img src="/Redis%E4%B8%80%E4%B8%BB%E4%BA%8C%E4%BB%8E%E4%B8%89%E5%93%A8%E5%85%B5/2020-05-16-15-56-08.png" class><p>通过命令查看各个redis的状态</p><img src="/Redis%E4%B8%80%E4%B8%BB%E4%BA%8C%E4%BB%8E%E4%B8%89%E5%93%A8%E5%85%B5/2020-05-16-16-00-18.png" class><p>slave 6380</p><img src="/Redis%E4%B8%80%E4%B8%BB%E4%BA%8C%E4%BB%8E%E4%B8%89%E5%93%A8%E5%85%B5/2020-05-16-16-01-09.png" class><p>slave 6381</p><img src="/Redis%E4%B8%80%E4%B8%BB%E4%BA%8C%E4%BB%8E%E4%B8%89%E5%93%A8%E5%85%B5/2020-05-16-16-01-39.png" class><p>当搭建好后主服务器是可读可写的，而从服务器是只读的。当主服务器宕机后，整个系统就瘫痪了，不能往从服务器写入数据，不能自动的把从服务器上升为主服务器。此时可通过哨兵模式来实现当主服务器宕机后，从服务器自动上升为主服务器。</p><h2 id="哨兵模式配置"><a href="#哨兵模式配置" class="headerlink" title="哨兵模式配置"></a>哨兵模式配置</h2><p>新建哨兵配置文件，分别命名为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sentinel.conf</span><br><span class="line">sentinel2.conf</span><br><span class="line">sentinel3.conf</span><br></pre></td></tr></table></figure><p>哨兵配置文件内容<br>sentinel.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">port 27000</span><br><span class="line"><span class="meta">#</span><span class="bash">master</span></span><br><span class="line">sentinel monitor master 39.100.107.169 6379 1</span><br><span class="line">sentinel down-after-milliseconds master 5000</span><br><span class="line">sentinel auth-pass master 123</span><br><span class="line">sentinel config-epoch master 1</span><br><span class="line">sentinel leader-epoch master 1</span><br></pre></td></tr></table></figure><p>sentinel2.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">port 27002</span><br><span class="line"><span class="meta">#</span><span class="bash">slave 1</span></span><br><span class="line">sentinel monitor master 39.100.107.169 6379 1</span><br><span class="line">sentinel down-after-milliseconds master 5000</span><br><span class="line">sentinel auth-pass master 123</span><br><span class="line">sentinel config-epoch master 1</span><br><span class="line">sentinel leader-epoch master 1</span><br></pre></td></tr></table></figure><p>sentinel3.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">port 27001</span><br><span class="line"><span class="meta">#</span><span class="bash">slave 2</span></span><br><span class="line">sentinel monitor master 39.100.107.169 6379 1</span><br><span class="line">sentinel down-after-milliseconds master 5000</span><br><span class="line">sentinel auth-pass master 123</span><br><span class="line">sentinel config-epoch master 1</span><br><span class="line">sentinel leader-epoch master 1</span><br></pre></td></tr></table></figure><p>这里需要注意的是如果redis配置种添加了密码验证，一定要在sentinel文件里添加auth-pass这个参数，不然在从机上升为主机后，其他服务器连接不了。</p><p>哨兵配置文件说明</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. port :当前Sentinel服务运行的端口  </span><br><span class="line">2.sentinel monitor mymaster 39.100.107.169 6379 1:Sentinel去监视一个名为mymaster的主redis实例，这个主实例的IP地址为本机地址39.100.107.169，端口号为6379，而将这个主实例判断为失效至少需要1个 Sentinel进程的同意，只要同意Sentinel的数量不达标，自动failover就不会执行  </span><br><span class="line">3.sentinel down-after-milliseconds mymaster 5000:指定了Sentinel认为Redis实例已经失效所需的毫秒数。当 实例超过该时间没有返回PING，或者直接返回错误，那么Sentinel将这个实例标记为主观下线。只有一个 Sentinel进程将实例标记为主观下线并不一定会引起实例的自动故障迁移：只有在足够数量的Sentinel都将一个实例标记为主观下线之后，实例才会被标记为客观下线，这时自动故障迁移才会执行  </span><br><span class="line">4.sentinel parallel-syncs mymaster 1：指定了在执行故障转移时，最多可以有多少个从Redis实例在同步新的主实例，在从Redis实例较多的情况下这个数字越小，同步的时间越长，完成故障转移所需的时间就越长  </span><br><span class="line">5.sentinel failover-timeout mymaster 15000：如果在该时间（ms）内未能完成failover操作，则认为该failover失败</span><br></pre></td></tr></table></figure><h3 id="哨兵测试"><a href="#哨兵测试" class="headerlink" title="哨兵测试"></a>哨兵测试</h3><p>启动3个哨兵</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">redis-server.exe sentinel.conf --sentinel</span><br><span class="line">redis-server.exe sentinel2.conf --sentinel</span><br><span class="line">redis-server.exe sentinel3.conf --sentinel</span><br></pre></td></tr></table></figure><img src="/Redis%E4%B8%80%E4%B8%BB%E4%BA%8C%E4%BB%8E%E4%B8%89%E5%93%A8%E5%85%B5/2020-05-16-16-25-19.png" class><h3 id="测试主从切换"><a href="#测试主从切换" class="headerlink" title="测试主从切换"></a>测试主从切换</h3><p>主机挂了后，从机是否能成功上位变为主机</p><p>先看下当前的redis状态</p><p>分别在客户端输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info replication</span><br></pre></td></tr></table></figure><img src="/Redis%E4%B8%80%E4%B8%BB%E4%BA%8C%E4%BB%8E%E4%B8%89%E5%93%A8%E5%85%B5/2020-05-16-16-14-53.png" class><p>当主机挂掉后，6381这个端口成了主机，这是通过哨兵的一个投票选择选出一个从机上升为主机。如果主机下次重新连接进来，那么它也不会立即成为主机，而是变为了从机。</p><h2 id="NET-Core中使用Redis集群"><a href="#NET-Core中使用Redis集群" class="headerlink" title=".NET Core中使用Redis集群"></a>.NET Core中使用Redis集群</h2><p>我们使用CSRedisCore来访问Redis，CSRedisCore是国内大牛开发的一个.net core redis 组件，源码可读性很强非常干净，几乎无任何依赖。性能相比ServiceStack.Redis和StackExchange.Redis会快10%左右，支持Redis的高级特性：订阅/发布，Pipeline，MGet/MSet，集群，分区。<br>创建一个.net core 控制台程序，然后添加nuget包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nuget Install-Package CSRedisCore</span><br></pre></td></tr></table></figure><p>Program.cs代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Threading;</span><br><span class="line"></span><br><span class="line">namespace ConsoleApp1</span><br><span class="line">&#123;</span><br><span class="line">    class Program</span><br><span class="line">    &#123;</span><br><span class="line">        static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            &#x2F;&#x2F;连接哨兵</span><br><span class="line">            var csredis &#x3D; new CSRedis.CSRedisClient(&quot;redis-master&quot;, new[] &#123;&quot;127.0.0.1:27000&quot; &#125;);</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;初始化 RedisHelper</span><br><span class="line">            RedisHelper.Initialization(csredis);</span><br><span class="line"></span><br><span class="line">            while (true)</span><br><span class="line">            &#123;</span><br><span class="line">                try</span><br><span class="line">                &#123;</span><br><span class="line">                    Test();</span><br><span class="line">                &#125;</span><br><span class="line">                catch(Exception ex)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(ex.ToString());</span><br><span class="line">                &#125;</span><br><span class="line">                Console.ReadLine();</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        static void Test()</span><br><span class="line">        &#123;</span><br><span class="line">            RedisHelper.Set(&quot;name&quot;, &quot;祝雷&quot;);&#x2F;&#x2F;设置值。默认永不过期</span><br><span class="line">            Console.WriteLine(RedisHelper.Get&lt;String&gt;(&quot;name&quot;));</span><br><span class="line"></span><br><span class="line">            RedisHelper.Set(&quot;time&quot;, DateTime.Now, 1);</span><br><span class="line">            Console.WriteLine(RedisHelper.Get&lt;DateTime&gt;(&quot;time&quot;));</span><br><span class="line">            Console.WriteLine(RedisHelper.Get&lt;DateTime&gt;(&quot;time&quot;));</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F; 列表</span><br><span class="line">            RedisHelper.RPush(&quot;list&quot;, &quot;第一个元素&quot;);</span><br><span class="line">            RedisHelper.RPush(&quot;list&quot;, &quot;第二个元素&quot;);</span><br><span class="line">            RedisHelper.LInsertBefore(&quot;list&quot;, &quot;第二个元素&quot;, &quot;我是新插入的第二个元素！&quot;);</span><br><span class="line">            Console.WriteLine($&quot;list的长度为&#123;RedisHelper.LLen(&quot;list&quot;)&#125;&quot;);</span><br><span class="line">            Console.WriteLine($&quot;list的第二个元素为&#123;RedisHelper.LIndex(&quot;list&quot;, 1)&#125;&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>模拟故障进行测试，启动程序后，杀死主Redis进程，.net core程序再次访问Redis会出现一次异常检查，然后能正常切换到新的master上。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文简单讲述主从建立和哨兵的配置。本机测试redis为Redis-x64-3.2.100&lt;a href=&quot;https://github.com/MicrosoftArchive/redis/releases&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Windows下载地址&lt;/a&gt;，使用二台服务器作为测试。&lt;/p&gt;
    
    </summary>
    
    
      <category term="环境搭建" scheme="https://linbei.top/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="阿里云" scheme="https://linbei.top/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="缓存" scheme="https://linbei.top/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>Mobirise搭建网页</title>
    <link href="https://linbei.top/Mobirise%E6%90%AD%E5%BB%BA%E7%BD%91%E9%A1%B5/"/>
    <id>https://linbei.top/Mobirise%E6%90%AD%E5%BB%BA%E7%BD%91%E9%A1%B5/</id>
    <published>2020-05-12T10:12:57.000Z</published>
    <updated>2020-05-23T01:20:25.517Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http:linbei.top">本人用Mobirise制作的网站请点击这里查看</a></p><a id="more"></a><img src="/Mobirise%E6%90%AD%E5%BB%BA%E7%BD%91%E9%A1%B5/2020-05-12-19-22-57.png" class><h2 id="Mobirise"><a href="#Mobirise" class="headerlink" title="Mobirise"></a>Mobirise</h2><p>哪里有手机网站建设软件？Mobirise是一个用户界面非常友好的程序，使您可以构建桌面和移动网站，准备在Javas cript中。可以在视觉上进行创建网站的过程中，通过拖放内容块中的工作区。此外，你可以将结果轻松地部署到桌面，将其上传到FTP位置或谷歌驱动器。</p><img src="/Mobirise%E6%90%AD%E5%BB%BA%E7%BD%91%E9%A1%B5/2020-05-12-18-58-17.png" class><p>Mobirise软件介绍</p><p>Mobirise是一个简单易用的免费网站构建器 - 只需将网站元素拖放到您的页面，添加内容并将其样式设置为您喜欢的样式，操作简单！Mobirise还为用户提供了大量1500多个网站块，模板和主题，包含数千个灵活选项。结合不同主题的积木，创造出独特的混合，帮助你迅速进入网站建设环境！<br>Mobirise不是一个基于Web的系统，它需要<a href="https://mobirise.ws/" target="_blank" rel="noopener">下载</a>软件并通过安装来使用。</p><h2 id="Mobirise软件特色"><a href="#Mobirise软件特色" class="headerlink" title="Mobirise软件特色"></a>Mobirise软件特色</h2><h3 id="不必编码"><a href="#不必编码" class="headerlink" title="不必编码"></a>不必编码</h3><p>Mobirise是一个简单易用的免费网站构建器 - 只需将网站元素拖放到您的页面，添加内容并将其样式设置为您喜欢的样式</p><img src="/Mobirise%E6%90%AD%E5%BB%BA%E7%BD%91%E9%A1%B5/2020-05-12-19-11-21.png" class><h3 id="与众不同"><a href="#与众不同" class="headerlink" title="与众不同"></a>与众不同</h3><p>Mobirise Website Builder提供了大量1500多个网站块，模板和主题，包含数千个灵活选项。结合不同主题的积木，创造出独特的混合，</p><img src="/Mobirise%E6%90%AD%E5%BB%BA%E7%BD%91%E9%A1%B5/2020-05-12-19-11-54.png" class><h3 id="自动移动"><a href="#自动移动" class="headerlink" title="自动移动"></a>自动移动</h3><p>移动网络流量在2016年超过桌面流量，并且只会在2019年增长，这就是为什么创建在所有设备上看起来都很好的网站的重要性。无需特殊操作，您使用Mobirise制作的所有网站都适合移动设备。您不必创建网站的特殊移动版本，它将自动适应。</p><img src="/Mobirise%E6%90%AD%E5%BB%BA%E7%BD%91%E9%A1%B5/2020-05-12-19-12-21.png" class><h3 id="简单易用"><a href="#简单易用" class="headerlink" title="简单易用"></a>简单易用</h3><p>使用拖放式网站构建器缩短开发时间。将块放入页面，内联编辑内容并发布 - 无需技术技能。观看下面的视频，了解Mobirise的实际应用。</p><h3 id="超过1500个惊人的块"><a href="#超过1500个惊人的块" class="headerlink" title="超过1500个惊人的块"></a>超过1500个惊人的块</h3><p>Mobirise Mac提供50多个主题和150多个演示页面，包括滑块， 带灯箱的图库， 文章， 计数器， 倒计时， 全屏介绍， 图像和视频， 功能， 数据表和定价表， 进度条和周期， 时间表， 选项卡和手风琴， 号召性用语， 表格， 谷歌地图， 社交块， 推荐， 页脚等。块的设计考虑了最新的网页设计趋势，它们非常灵活，并且充满了自定义选项。</p><h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><h3 id="图像-内容滑块"><a href="#图像-内容滑块" class="headerlink" title="图像/内容滑块"></a>图像/内容滑块</h3><p>使用Mobirise 引导滑块创建响应式触摸滑动幻灯片。将图像，文本，按钮添加到幻灯片，设置自动播放，全屏，全宽或盒装布局。</p><img src="/Mobirise%E6%90%AD%E5%BB%BA%E7%BD%91%E9%A1%B5/2020-05-12-19-13-54.png" class><h3 id="、联系表格"><a href="#、联系表格" class="headerlink" title="、联系表格"></a>、联系表格</h3><p>无需任何服务器端集成即可轻松添加订阅和联系表单。只需将您的电子邮件链接到表单并立即获取提交。</p><img src="/Mobirise%E6%90%AD%E5%BB%BA%E7%BD%91%E9%A1%B5/2020-05-12-19-14-17.png" class><h3 id="图像画廊"><a href="#图像画廊" class="headerlink" title="图像画廊"></a>图像画廊</h3><p>使用移动优化的响应网格在砌体图库中展示您的图片。集成灯箱可将缩略图扩展为完整浏览器图像滑块。</p><img src="/Mobirise%E6%90%AD%E5%BB%BA%E7%BD%91%E9%A1%B5/2020-05-12-19-14-46.png" class><h3 id="手机菜单"><a href="#手机菜单" class="headerlink" title="手机菜单"></a>手机菜单</h3><p>Mobirise水平导航菜单在设备上折叠为单个图标移动菜单，也称为“ 汉堡菜单 ”，为所有访客提供完美的移动体验。</p><img src="/Mobirise%E6%90%AD%E5%BB%BA%E7%BD%91%E9%A1%B5/2020-05-12-19-15-11.png" class><h3 id="谷歌地图"><a href="#谷歌地图" class="headerlink" title="谷歌地图"></a>谷歌地图</h3><p>帮助客户找到通往公司所在地的路径 - 只需删除Google地图块并输入您的地址即可。</p><img src="/Mobirise%E6%90%AD%E5%BB%BA%E7%BD%91%E9%A1%B5/2020-05-12-19-15-38.png" class><h3 id="社交按钮"><a href="#社交按钮" class="headerlink" title="社交按钮"></a>社交按钮</h3><p>通过“分享此页面”和“关注我们”块来扩大您的受众群体并改善社交媒体参与度。社交分享计数器自动显示，无需任何调整。</p><img src="/Mobirise%E6%90%AD%E5%BB%BA%E7%BD%91%E9%A1%B5/2020-05-12-19-15-59.png" class><h3 id="字母和图标"><a href="#字母和图标" class="headerlink" title="字母和图标"></a>字母和图标</h3><p>从800多个Google字体和视网膜即用免费图标列表中进行选择，以设计独特的外观和感觉，并具有一些排版风格。</p><img src="/Mobirise%E6%90%AD%E5%BB%BA%E7%BD%91%E9%A1%B5/2020-05-12-19-16-22.png" class><h3 id="视频背景"><a href="#视频背景" class="headerlink" title="视频背景"></a>视频背景</h3><p>视频可以是网站的一个很好的补充。使您的网站栩栩如生，并与环境背景视频建立即时连接。</p><img src="/Mobirise%E6%90%AD%E5%BB%BA%E7%BD%91%E9%A1%B5/2020-05-12-19-16-46.png" class><h2 id="Mobirise-主要特点"><a href="#Mobirise-主要特点" class="headerlink" title="Mobirise 主要特点"></a>Mobirise 主要特点</h2><h3 id="只需几分钟就可以拖放块并构建网站"><a href="#只需几分钟就可以拖放块并构建网站" class="headerlink" title="只需几分钟就可以拖放块并构建网站"></a>只需几分钟就可以拖放块并构建网站</h3><p>Mobirise被设计为尽可能简单和无畏的事实，一旦您第一次启动应用程序，您将受到顶级工具栏和网站构建器面板的简约界面的欢迎，这一事实变得明显。使用Mobirise比看起来更简单，因为您只需单击右下角的大加号按钮并将块拖放到页面中。您将获得一系列有趣的块，例如jumbotrons，视频背景，汉堡菜单，粘贴标题，视差滚动和英雄图像。</p><h3 id="轻松创建响应式和移动优化的网站"><a href="#轻松创建响应式和移动优化的网站" class="headerlink" title="轻松创建响应式和移动优化的网站"></a>轻松创建响应式和移动优化的网站</h3><p>选择任何块后，其右上方会出现一个小菜单。借助这个小菜单，您可以以非常自然和直观的方式轻松地排列，移动，编辑或删除元素。因为如今，移动电话是我们生活中很重要的部分，网站必须具有适应性强且响应能力强的接口。考虑到这一点，Mobirise使您能够预览您的网站，并了解它们在智能手机，横向智能手机，桌子和计算机上的外观。</p><h3 id="不是最强大的网站建设软件解决方案，但绝对是最简单的"><a href="#不是最强大的网站建设软件解决方案，但绝对是最简单的" class="headerlink" title="不是最强大的网站建设软件解决方案，但绝对是最简单的"></a>不是最强大的网站建设软件解决方案，但绝对是最简单的</h3><p>更重要的是，Mobirise使您可以将您的网站发布到本地驱动器或在GitHub，Amazon S3和Google Drive上托管它。总而言之，Mobirise是一款高效的小型macOS应用程序，旨在尽可能简单和用户友好，这对于几乎没有网站建设经验的用户来说非常理想。</p><h2 id="Mobirise-使用方法"><a href="#Mobirise-使用方法" class="headerlink" title="Mobirise 使用方法"></a>Mobirise 使用方法</h2><h3 id="将块拖到页面"><a href="#将块拖到页面" class="headerlink" title="将块拖到页面"></a>将块拖到页面</h3><p>首先创建一个新网站并获取主题。然后使用右下角的大红色“加号”按钮展开块面板，然后开始拖动您喜欢的块。</p><img src="/Mobirise%E6%90%AD%E5%BB%BA%E7%BD%91%E9%A1%B5/2020-05-12-19-18-33.png" class><h3 id="编辑和样式内联"><a href="#编辑和样式内联" class="headerlink" title="编辑和样式内联"></a>编辑和样式内联</h3><p>像在常规文本编辑器中一样编辑每个块的内容，单击媒体元素以插入您自己的图像，视频或图标。</p><img src="/Mobirise%E6%90%AD%E5%BB%BA%E7%BD%91%E9%A1%B5/2020-05-12-19-18-50.png" class><h3 id="设置块参数"><a href="#设置块参数" class="headerlink" title="设置块参数"></a>设置块参数</h3><p>通过蓝色“齿轮”按钮引出的参数面板设置适当的选项。</p><img src="/Mobirise%E6%90%AD%E5%BB%BA%E7%BD%91%E9%A1%B5/2020-05-12-19-19-14.png" class><h3 id="预览和发布"><a href="#预览和发布" class="headerlink" title="预览和发布"></a>预览和发布</h3><p>单击网站构建器中的“移动视图”以检查您的网站在不同设备上的显示方式，并发布到本地驱动器，FTP或免费的Github页面。</p><img src="/Mobirise%E6%90%AD%E5%BB%BA%E7%BD%91%E9%A1%B5/2020-05-12-19-19-41.png" class>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http:linbei.top&quot;&gt;本人用Mobirise制作的网站请点击这里查看&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="环境搭建" scheme="https://linbei.top/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="随笔" scheme="https://linbei.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="Hexo" scheme="https://linbei.top/tags/Hexo/"/>
    
      <category term="前端" scheme="https://linbei.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Hexo全局添加APlayer音乐播放器</title>
    <link href="https://linbei.top/Hexo%E5%85%A8%E5%B1%80%E6%B7%BB%E5%8A%A0APlayer%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/"/>
    <id>https://linbei.top/Hexo%E5%85%A8%E5%B1%80%E6%B7%BB%E5%8A%A0APlayer%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/</id>
    <published>2019-03-18T08:12:57.000Z</published>
    <updated>2020-05-23T01:20:25.408Z</updated>
    
    <content type="html"><![CDATA[<h2 id="相关站点"><a href="#相关站点" class="headerlink" title="相关站点"></a>相关站点</h2><ul><li><a href="https://aplayer.js.org/#/" target="_blank" rel="noopener">APlayer</a></li><li><a href="https://github.com/MoePlayer/APlayer" target="_blank" rel="noopener">APlayer Github</a></li><li><a href="https://github.com/MoePlayer/hexo-tag-aplayer" target="_blank" rel="noopener">Hexo-Tag-Aplayer</a></li><li><a href="https://music.liuzhijin.cn/" target="_blank" rel="noopener">音乐直链搜索工具</a><a id="more"></a><h2 id="基于-Yilia-主题全局添加-APlayer-音乐播放器"><a href="#基于-Yilia-主题全局添加-APlayer-音乐播放器" class="headerlink" title="基于 Yilia 主题全局添加 APlayer 音乐播放器"></a>基于 Yilia 主题全局添加 APlayer 音乐播放器</h2></li></ul><p>编辑文件 hexo-theme-yilia/layout/_partial/left-col.ejs ，在文件的末尾追加以下代码；其中歌曲的歌词文件、封面图片、URL都可以从通过<a href="https://music.liuzhijin.cn/" target="_blank" rel="noopener">音乐直链搜索工具</a>获取，有些音乐由于版权得问题，个人建议还是通过下载到本地比较好。当然如果你的网站是部署再github上就不建议使用本地音乐，会存在卡顿的情况。如果是放在云服务器上，直接下载到本地。提示，如果下面的代码不能将APlayer播放器固定到理想的页面位置，可自行修改 div 标签的样式和 APlayer 的 fixed 参数值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span>(theme.aplayer.enable) &#123; %&gt;</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css"</span>&gt;</span><br><span class="line"><span class="comment">// 这里div的样式是笔者自己修改过的，你可以直接使用APlayer官方的原配置：&lt;div id="aplayer"&gt;&lt;/div&gt;</span></span><br><span class="line">&lt;div id=<span class="string">"aplayer"</span> style=<span class="string">"position:absolute;left;0;bottom:0;"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;script src="https:/</span><span class="regexp">/cdn.jsdelivr.net/</span>npm/aplayer@<span class="number">1.10</span><span class="number">.1</span>/dist/APlayer.min.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script src="</span>https:<span class="comment">//cdn.jsdelivr.net/npm/color-thief-don@2.0.2/src/color-thief.js"&gt;&lt;/script&gt;</span></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">const</span> ap = <span class="keyword">new</span> APlayer(&#123;</span><br><span class="line">    container: <span class="built_in">document</span>.getElementById(<span class="string">'aplayer'</span>),</span><br><span class="line">    autoplay: <span class="literal">false</span>, <span class="comment">//自动播放</span></span><br><span class="line">    listFolded: <span class="literal">true</span>, <span class="comment">//播放列表默认折叠</span></span><br><span class="line">    listMaxHeight: <span class="number">90</span>, <span class="comment">//播放列表最大高度</span></span><br><span class="line">    order: <span class="string">'list'</span>, <span class="comment">//音频循环顺序, 可选值: 'list', 'random'</span></span><br><span class="line">    loop: <span class="string">'all'</span>, <span class="comment">//音频循环播放, 可选值: 'all', 'one', 'none'</span></span><br><span class="line">    theme: <span class="string">'#e9e9e9'</span>, <span class="comment">//切换音频时的主题色，优先级低于audio.theme</span></span><br><span class="line">    preload: <span class="string">'none'</span>, <span class="comment">//音频预加载，可选值: 'none', 'metadata', 'auto'</span></span><br><span class="line">    mutex: <span class="literal">true</span>, <span class="comment">//互斥，阻止多个播放器同时播放，当前播放器播放时暂停其他播放器</span></span><br><span class="line">    lrcType: <span class="number">3</span>, <span class="comment">//歌词格式，可选值：3（LRC文件歌词格式），1（JS字符串歌词格式）</span></span><br><span class="line">    volume: <span class="number">0.7</span>, <span class="comment">//默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span></span><br><span class="line">    fixed: <span class="literal">false</span>, <span class="comment">//吸底模式（fixed:true），迷你模式（mini:true），普通模式（注释此行或者设置fixed:false）</span></span><br><span class="line">    audio: [&#123;</span><br><span class="line">        name: <span class="string">'平凡之路'</span>,</span><br><span class="line">        artist: <span class="string">'朴树'</span>,</span><br><span class="line">        lrc: <span class="string">'/downloads/lrc/平凡之路-朴树.lrc'</span>,</span><br><span class="line">        cover: <span class="string">'http://p2.music.126.net/W_5XiCv3rGS1-J7EXpHSCQ==/18885211718782327.jpg?param=300x300'</span>,</span><br><span class="line">        url: <span class="string">'http://fs.open.kugou.com/cd5cbe8edb012e4f77b0857cefc0956e/5c66accf/G097/M08/0A/1F/AYcBAFkQGpOAMUpuAEm-3SlWMyk951.mp3'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        name: <span class="string">'后会无期'</span>,</span><br><span class="line">        artist: <span class="string">'G.E.M.邓紫棋'</span>,</span><br><span class="line">        lrc: <span class="string">'/downloads/lrc/后会无期-G.E.M.邓紫棋.lrc'</span>,</span><br><span class="line">        cover: <span class="string">'http://p1.music.126.net/vpvPajo3kn88nHc7jUjeWQ==/5974746185758035.jpg?param=300x300'</span>,</span><br><span class="line">        url: <span class="string">'http://m10.music.126.net/20190215193113/e5afc8b5376136029366f2053cf30f85/ymusic/2c87/6ec3/582e/0d572dcc04f8de34133c0f364b74c30c.mp3'</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//实现切换音频时，根据音频的封面图片自适应主题色</span></span><br><span class="line">  <span class="keyword">const</span> colorThief = <span class="keyword">new</span> ColorThief();</span><br><span class="line">  <span class="keyword">const</span> setTheme = <span class="function">(<span class="params">index</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!ap.list.audios[index].theme) &#123;</span><br><span class="line">      colorThief.getColorAsync(ap.list.audios[index].cover, <span class="function"><span class="keyword">function</span>(<span class="params">color</span>) </span>&#123;</span><br><span class="line">        ap.theme(<span class="string">`rgb(<span class="subst">$&#123;color[<span class="number">0</span>]&#125;</span>, <span class="subst">$&#123;color[<span class="number">1</span>]&#125;</span>, <span class="subst">$&#123;color[<span class="number">2</span>]&#125;</span>)`</span>, index);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  setTheme(ap.list.index);</span><br><span class="line">  ap.on(<span class="string">'listswitch'</span>, (data) =&gt; &#123;</span><br><span class="line">    setTheme(data.index);</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;% &#125; %&gt;</span></span><br></pre></td></tr></table></figure><h2 id="配置-Yilia-主题"><a href="#配置-Yilia-主题" class="headerlink" title="配置 Yilia 主题"></a>配置 Yilia 主题</h2><p>编辑 Yilia 主题的配置文件 hexo-theme-yilia/_config.yml，在文件末尾追加以下内容。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aplayer:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>如果你使用了yilia主题的相册功能，加了播放器后会出现原有相册显示不了的问题。当把hexo-tag-aplayer 配置好并且用几个页面测试后，发现相册功能失效了，查找问题后发现在ins.js中自动加了下面这些代码导致的失效。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.css"</span>&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script src="https:/</span><span class="regexp">/cdn.jsdelivr.net/</span>npm/meting@<span class="number">1.2</span>/dist/Meting.min.js<span class="string">"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>经过一番在网上寻找后无果后，于是决定仔细研读官方文档，查看官方的中文文档后发现，可能是插件的自动脚本插入功能导致的，使得ins.js中自动插入了代码，于是关闭该功能试试：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aplayer:</span></span><br><span class="line">  <span class="attr">asset_inject:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>这段配置要加载博客根目录的配置文件中，而不是主题的配置文件。</p><h2 id="重新编译-Hexo"><a href="#重新编译-Hexo" class="headerlink" title="重新编译 Hexo"></a>重新编译 Hexo</h2><p>提示，若音频文件使用的是本地资源文件，同时通过“hexo server”提供Web服务，那么则将无法通过APlayer的进度条调节播放进度，此时需要使用Nginx、Apache等Web服务器。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 进入博客的根目录</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">cd</span> /blogroot</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 通过Hexo清理Public目录</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> hexo clean</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 通过Hexo构建静态文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> hexo generate</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 通过Hexo启动服务</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> hexo server</span></span><br></pre></td></tr></table></figure><h2 id="最终效果图"><a href="#最终效果图" class="headerlink" title="最终效果图"></a>最终效果图</h2><img src="/Hexo%E5%85%A8%E5%B1%80%E6%B7%BB%E5%8A%A0APlayer%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/2020-03-18-16-17-08.png" class>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;相关站点&quot;&gt;&lt;a href=&quot;#相关站点&quot; class=&quot;headerlink&quot; title=&quot;相关站点&quot;&gt;&lt;/a&gt;相关站点&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://aplayer.js.org/#/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;APlayer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/MoePlayer/APlayer&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;APlayer Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/MoePlayer/hexo-tag-aplayer&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo-Tag-Aplayer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://music.liuzhijin.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;音乐直链搜索工具&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="环境搭建" scheme="https://linbei.top/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="阿里云" scheme="https://linbei.top/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="Hexo" scheme="https://linbei.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>SQL Server 2017搭建主从备份</title>
    <link href="https://linbei.top/SQL%20Server%202017%E6%90%AD%E5%BB%BA%E4%B8%BB%E4%BB%8E%E5%A4%87%E4%BB%BD/"/>
    <id>https://linbei.top/SQL%20Server%202017%E6%90%AD%E5%BB%BA%E4%B8%BB%E4%BB%8E%E5%A4%87%E4%BB%BD/</id>
    <published>2019-03-15T02:32:57.000Z</published>
    <updated>2020-05-23T01:20:25.611Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于日志传输"><a href="#关于日志传输" class="headerlink" title="关于日志传输"></a>关于日志传输</h2><p>和Oracle DG，Mysql主从一样，SQL Server也支持主从的高可用。进一步提高数据的安全性和业务的高可用。通过将主库上的日志传输到备用实例上，从而达到主备库数据的一致性。<br>优点：</p><a id="more"></a><ul><li>可以为一个主库添加多个备库，从而提高数据灾难性恢复的解决方法。</li><li>和其他数据库主从一样，从库可以提高只读访问(在还原数据期间)。</li><li>可以自定义数据延迟应用时间。这样好处就是如果主库错误修改了数据，而从库还没有应用修改的数据，那么就可以通过从库来把错误环境的数据还原回来。<br>日志传输过程</li><li>在主服务器实例中备份事务日志。</li><li>将事务日志文件复制到辅助服务器实例。</li><li>在辅助服务器实例中还原日志备份。<br>日志可传送到多个辅助服务器实例。 在这些情况下，将针对每个辅助服务器实例重复执行操作 2 和操作 3。 日志传送配置不会自动从主库故障转移到辅助服务器。 如果主数据库变为不可用，可手动切换到任意一个从库。 下图是由一个主库，三个从库组成的主从环境。<img src="/SQL%20Server%202017%E6%90%AD%E5%BB%BA%E4%B8%BB%E4%BB%8E%E5%A4%87%E4%BB%BD/2020-03-15-11-02-29.png" class></li></ul><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><p>主数据库必须处于Full恢复模式或大容量日志恢复模式。 在配置日志传送之前，必须创建共享备份目录，以便备库可以访问事务日志备份。 这是对生成事务日志备份的目录的共享。 例如，如果将事务日志备份到目录 E:\log_backup，则可以对该目录创建共享。</p><h2 id="搭建主从"><a href="#搭建主从" class="headerlink" title="搭建主从"></a>搭建主从</h2><h3 id="创建管理员【可选】"><a href="#创建管理员【可选】" class="headerlink" title="创建管理员【可选】"></a>创建管理员【可选】</h3><p>下面步骤是可选的，使用administrator管理员账户也是可以的。如果是使用administrator用户，则下文中关于sqladmin用户权限相关的，替换为administrator。</p><ul><li>主从两台分别创建sqladmin用户加入administrators组删除默认的users组，并且设置”密码永不过期”和”用户不能更改密码” 为sqladmin创建一个密码 win+R，输入lusrmgr.msc</li><li>设置用户权限 右击用户，点击“属性”，将默认的USERS组删除，新增Administrators组。<img src="/SQL%20Server%202017%E6%90%AD%E5%BB%BA%E4%B8%BB%E4%BB%8E%E5%A4%87%E4%BB%BD/2020-03-15-11-15-38.png" class></li><li>设置共享目录 在主或者从服务器上创建日志存放目录E:\log_backup<img src="/SQL%20Server%202017%E6%90%AD%E5%BB%BA%E4%B8%BB%E4%BB%8E%E5%A4%87%E4%BB%BD/2020-03-15-11-16-14.png" class>在“高级共享”窗口中，勾选“共享此文件夹”选项，然后单机“权限”按钮对该共享文件夹的权限进行设置。需要让sqladmin用户具有完全控制该文件夹的权限，先将默认的“erverone”用户删除，然后添加sqladmin,administaor用户，并在“sqladmin,administaor”的权限中勾选“完全控制”，“更改”和“读取”项，然后单击两次“确定”按钮保存共享设置。<img src="/SQL%20Server%202017%E6%90%AD%E5%BB%BA%E4%B8%BB%E4%BB%8E%E5%A4%87%E4%BB%BD/2020-03-15-11-16-30.png" class>在NTFS文件系统中，还需要设置用户对该目录的安全权限，如果安全权限不够，系统在写入备份文件的时候会报没有权限的错误。 可以在“安全”选项卡，单机“编辑”按钮，在“log_backup的权限”界面，单击“按钮”，添加sqladmin用户，然后在“sqladmin的权限”中选择“完全控制”权限，单机“确定”按钮保存权限信息。</li><li>配置SQL Server启动模式<img src="/SQL%20Server%202017%E6%90%AD%E5%BB%BA%E4%B8%BB%E4%BB%8E%E5%A4%87%E4%BB%BD/2020-03-15-11-16-59.png" class></li><li>配置日志传输 右击数据库服务器实例，选择“属性”选项，在弹出的“服务器属性”界面中，单机左侧的“安全性”，然后在右侧窗口中的“服务器身份验证”中选择“SQLServer和Windows身份验证模式”，并勾选“服务器代理账户”中的“启用服务器代理账户”选项。输入正确的“代理账号”和“密码”，单击“确定”按钮保存配置信息。<img src="/SQL%20Server%202017%E6%90%AD%E5%BB%BA%E4%B8%BB%E4%BB%8E%E5%A4%87%E4%BB%BD/2020-03-15-11-17-14.png" class></li><li>在主数据库服务器中配置要同步的数据库AppsHK属性<img src="/SQL%20Server%202017%E6%90%AD%E5%BB%BA%E4%B8%BB%E4%BB%8E%E5%A4%87%E4%BB%BD/2020-03-15-11-17-37.png" class></li><li>设置完之后选择“事务日志传送”，勾选“将此数据库启用未日志传送配置中的主数据库”选项，单击“事务日志备份”中的“备份设置按钮”，打开“事务日志备份设置”界面<img src="/SQL%20Server%202017%E6%90%AD%E5%BB%BA%E4%B8%BB%E4%BB%8E%E5%A4%87%E4%BB%BD/2020-03-15-11-18-03.png" class><img src="/SQL%20Server%202017%E6%90%AD%E5%BB%BA%E4%B8%BB%E4%BB%8E%E5%A4%87%E4%BB%BD/2020-03-15-11-18-12.png" class></li><li>主库上备份文件夹的网路路径可以在备库上进行测试，看备库能否访问 备库上进行操作：<img src="/SQL%20Server%202017%E6%90%AD%E5%BB%BA%E4%B8%BB%E4%BB%8E%E5%A4%87%E4%BB%BD/2020-03-15-11-18-29.png" class></li><li>点击计划,在“作业计划属性”界面，确认“计划类型”为重复执行，为测试效果明显，设置为15秒执行一次作业计划。最后确认“持续时间”，根据自己需要设置，如果一直备份的话，可以设置为“无结束日期”。<img src="/SQL%20Server%202017%E6%90%AD%E5%BB%BA%E4%B8%BB%E4%BB%8E%E5%A4%87%E4%BB%BD/2020-03-15-11-18-49.png" class></li><li>设置完成，确认之后再次打开“事务日志备份设置”界面，则备份作业的作业名称后面变成“编辑作业”按钮，单击进去，将“所有者”修改为sqladmin。<br>如果没有sqladmin先添加<img src="/SQL%20Server%202017%E6%90%AD%E5%BB%BA%E4%B8%BB%E4%BB%8E%E5%A4%87%E4%BB%BD/2020-03-15-11-19-05.png" class><img src="/SQL%20Server%202017%E6%90%AD%E5%BB%BA%E4%B8%BB%E4%BB%8E%E5%A4%87%E4%BB%BD/2020-03-15-11-19-13.png" class><img src="/SQL%20Server%202017%E6%90%AD%E5%BB%BA%E4%B8%BB%E4%BB%8E%E5%A4%87%E4%BB%BD/2020-03-15-11-19-22.png" class></li><li>单击数据库属性界面的“辅助数据库”中的“添加”按钮，打开“辅助数据库设置”窗口。<img src="/SQL%20Server%202017%E6%90%AD%E5%BB%BA%E4%B8%BB%E4%BB%8E%E5%A4%87%E4%BB%BD/2020-03-15-11-19-38.png" class><img src="/SQL%20Server%202017%E6%90%AD%E5%BB%BA%E4%B8%BB%E4%BB%8E%E5%A4%87%E4%BB%BD/2020-03-15-11-19-44.png" class><img src="/SQL%20Server%202017%E6%90%AD%E5%BB%BA%E4%B8%BB%E4%BB%8E%E5%A4%87%E4%BB%BD/2020-03-15-11-19-51.png" class></li><li>设置完之后点击确定按钮，在数据库属性配置界面将配置好的脚本保存到本地，最后点击确定<img src="/SQL%20Server%202017%E6%90%AD%E5%BB%BA%E4%B8%BB%E4%BB%8E%E5%A4%87%E4%BB%BD/2020-03-15-11-20-13.png" class>到此数据库主从配置完成，可以在主库进行操作，在从库上查看对应的数据是否同步，如果没有同步成功，可以在从库上查看同步任务状态，查看失败原因。<img src="/SQL%20Server%202017%E6%90%AD%E5%BB%BA%E4%B8%BB%E4%BB%8E%E5%A4%87%E4%BB%BD/2020-03-15-11-20-38.png" class></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关于日志传输&quot;&gt;&lt;a href=&quot;#关于日志传输&quot; class=&quot;headerlink&quot; title=&quot;关于日志传输&quot;&gt;&lt;/a&gt;关于日志传输&lt;/h2&gt;&lt;p&gt;和Oracle DG，Mysql主从一样，SQL Server也支持主从的高可用。进一步提高数据的安全性和业务的高可用。通过将主库上的日志传输到备用实例上，从而达到主备库数据的一致性。&lt;br&gt;优点：&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="https://linbei.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="随笔" scheme="https://linbei.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="SqlServer" scheme="https://linbei.top/tags/SqlServer/"/>
    
  </entry>
  
  <entry>
    <title>SQL死锁产生原因和解决方法</title>
    <link href="https://linbei.top/SQL%E6%AD%BB%E9%94%81%E4%BA%A7%E7%94%9F%E5%8E%9F%E5%9B%A0%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://linbei.top/SQL%E6%AD%BB%E9%94%81%E4%BA%A7%E7%94%9F%E5%8E%9F%E5%9B%A0%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2019-03-13T12:32:57.000Z</published>
    <updated>2020-05-23T01:20:25.658Z</updated>
    
    <content type="html"><![CDATA[<h2 id="死锁现象"><a href="#死锁现象" class="headerlink" title="死锁现象"></a>死锁现象</h2><p><strong>表现一</strong>：一个用户A 访问表A(锁住了表A)，然后又访问表B，另一个用户B 访问表B(锁住了表B)，然后企图访问表A，这时用户A由于用户B已经锁住表B，它必须等待用户B释放表B，才能继续，好了他老人家就只好老老实实在这等了，同样用户B要等用户A释放表A才能继续这就死锁了。</p><ul><li>解决方法<br>这种死锁是由于你的程序的BUG产生的，除了调整你的程序的逻辑别无他法<br>　　仔细分析你程序的逻辑：<br>　　1：尽量避免同时锁定两个资源<br>　　2: 必须同时锁定两个资源时，要保证在任何时刻都应该按照相同的顺序来锁定资源.<a id="more"></a></li></ul><p><strong>表现二</strong>：用户A读一条纪录，然后修改该条纪录。这时用户B修改该条纪录，这里用户A的事务里锁的性质由共享锁企图上升到独占锁(for update),而用户B里的独占锁由于A有共享锁存在所以必须等A释放掉共享锁，而A由于B的独占锁而无法上升的独占锁也就不可能释放共享锁，于是出现了死锁。<br>　　这种死锁比较隐蔽，但其实在稍大点的项目中经常发生。其实这种死锁也可以叫做书签查找所引起的。</p><img src="/SQL%E6%AD%BB%E9%94%81%E4%BA%A7%E7%94%9F%E5%8E%9F%E5%9B%A0%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/2020-03-13-21-00-04.png" class><p>解决方法：<br>　　让用户A的事务（即先读后写类型的操作),在select 时就是用Update lock</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> table1 <span class="keyword">with</span>(updlock) <span class="keyword">where</span> ....</span><br></pre></td></tr></table></figure><p>死锁，简而言之，两个或者多个trans，同时请求对方正在请求的某个对象，导致双方互相等待。简单的例子如下：</p><table><thead><tr><th align="left">trans1</th><th align="left">trans2</th></tr></thead><tbody><tr><td align="left">1.IDBConnection.BeginTransaction</td><td align="left">2.IDBConnection.BeginTransaction</td></tr><tr><td align="left">2.update table A</td><td align="left">2.update table B</td></tr><tr><td align="left"><font color="#FF0000"> 3.update table B </font></td><td align="left"><font color="#FF0000"> 3.update table A </font></td></tr><tr><td align="left"><font color="#FF0000"> 4.IDBConnection.Commit </font></td><td align="left"><font color="#FF0000"> 4.IDBConnection.Commit </font></td></tr></tbody></table><p><font color="#FF0000"> 那么，很容易看到，如果trans1和trans2，分别到达了step3，那么trans1会请求对于B的X锁，trans2会请求对于A的X锁，而二者的锁在step2上已经被对方分别持有了。由于得不到锁，后面的Commit无法执行，这样双方开始死锁。 </font></p><p> 好，我们看一个简单的例子，来解释一下，应该如何解决死锁问题。</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- Batch #1</span></span><br><span class="line"> <span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> deadlocktest</span><br><span class="line"> <span class="keyword">GO</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">USE</span> deadlocktest</span><br><span class="line"> <span class="keyword">SET</span> NOCOUNT <span class="keyword">ON</span></span><br><span class="line"> DBCC TRACEON (<span class="number">1222</span>, <span class="number">-1</span>)</span><br><span class="line"> <span class="comment">-- 在SQL2005中，增加了一个新的dbcc参数，就是1222，原来在2000下，我们知道，可以执行dbcc</span></span><br><span class="line"> <span class="comment">-- traceon(1204,3605,-1)看到所有的死锁信息。SqlServer 2005中，对于1204进行了增强，这就是1222。</span></span><br><span class="line"> <span class="keyword">GO</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">IF</span> OBJECT_ID (<span class="string">'t1'</span>) <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DROP</span> <span class="keyword">TABLE</span> t1</span><br><span class="line"> <span class="keyword">IF</span> OBJECT_ID (<span class="string">'p1'</span>) <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DROP</span> PROC p1</span><br><span class="line"> <span class="keyword">IF</span> OBJECT_ID (<span class="string">'p2'</span>) <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DROP</span> PROC p2</span><br><span class="line"> <span class="keyword">GO</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t1 (c1 <span class="built_in">int</span>, c2 <span class="built_in">int</span>, c3 <span class="built_in">int</span>, c4 <span class="built_in">char</span>(<span class="number">5000</span>))</span><br><span class="line"> <span class="keyword">GO</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">DECLARE</span> @x <span class="built_in">int</span></span><br><span class="line"> <span class="keyword">SET</span> @x = <span class="number">1</span></span><br><span class="line"> <span class="keyword">WHILE</span> (@x &lt;= <span class="number">1000</span>) <span class="keyword">BEGIN</span></span><br><span class="line">          <span class="keyword">INSERT</span> <span class="keyword">INTO</span> t1 <span class="keyword">VALUES</span> (@x*<span class="number">2</span>, @x*<span class="number">2</span>, @x*<span class="number">2</span>, @x*<span class="number">2</span>)</span><br><span class="line">          <span class="keyword">SET</span> @x = @x + <span class="number">1</span></span><br><span class="line"> <span class="keyword">END</span></span><br><span class="line"> <span class="keyword">GO</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">CREATE</span> CLUSTERED <span class="keyword">INDEX</span> cidx <span class="keyword">ON</span> t1 (c1)</span><br><span class="line"> <span class="keyword">CREATE</span> NONCLUSTERED <span class="keyword">INDEX</span> idx1 <span class="keyword">ON</span> t1 (c2)</span><br><span class="line"> <span class="keyword">GO</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="keyword">CREATE</span> PROC p1 @p1 <span class="built_in">int</span> <span class="keyword">AS</span> <span class="keyword">SELECT</span> c2, c3 <span class="keyword">FROM</span> t1 <span class="keyword">WHERE</span> c2 <span class="keyword">BETWEEN</span> @p1 <span class="keyword">AND</span> @p1+<span class="number">1</span></span><br><span class="line"> <span class="keyword">GO</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="keyword">CREATE</span> PROC p2 @p1 <span class="built_in">int</span> <span class="keyword">AS</span></span><br><span class="line">          <span class="keyword">UPDATE</span> t1 <span class="keyword">SET</span> c2 = c2+<span class="number">1</span> <span class="keyword">WHERE</span> c1 = @p1</span><br><span class="line">          <span class="keyword">UPDATE</span> t1 <span class="keyword">SET</span> c2 = c2<span class="number">-1</span> <span class="keyword">WHERE</span> c1 = @p1</span><br><span class="line"> <span class="keyword">GO</span></span><br></pre></td></tr></table></figure><p>上述sql创建一个deadlock的示范数据库，插入了1000条数据，并在表t1上建立了c1列的聚集索引，和c2列的非聚集索引。另外创建了两个sp，分别是从t1中select数据和update数据。</p><p>   好，打开一个新的查询窗口，我们开始执行下面的query：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- Batch #2</span></span><br><span class="line">  <span class="keyword">USE</span> deadlocktest</span><br><span class="line">  <span class="keyword">SET</span> NOCOUNT <span class="keyword">ON</span></span><br><span class="line">  <span class="keyword">WHILE</span> (<span class="number">1</span>=<span class="number">1</span>) EXEC p2 <span class="number">4</span></span><br><span class="line">  <span class="keyword">GO</span></span><br></pre></td></tr></table></figure><p>  开始执行后，然后我们打开第三个查询窗口，执行下面的query：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- Batch #3</span></span><br><span class="line"><span class="keyword">USE</span> deadlocktest</span><br><span class="line"><span class="keyword">SET</span> NOCOUNT <span class="keyword">ON</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="comment">#t1 (c2 int, c3 int)</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHILE</span> (<span class="number">1</span>=<span class="number">1</span>) <span class="keyword">BEGIN</span></span><br><span class="line">          <span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="comment">#t1 EXEC p1 4</span></span><br><span class="line">          <span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> <span class="comment">#t1</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">GO</span></span><br></pre></td></tr></table></figure><p> 开始执行，哈哈，很快，我们看到了这样的错误信息<br> Msg 1205, Level 13, State 51, Procedure p1, Line 4<br>   Transaction (Process ID 54) was deadlocked on lock resources with another process and has been chosen as the deadlock victim. Rerun the transaction.</p><p>pid54发现了死锁。<br>   那么，我们该如何解决它？</p><p>   在SqlServer 2005中，我们可以这么做：</p><ul><li>在trans3的窗口中，选择EXEC p1 4，然后right click，看到了菜单了吗？选择Analyse Query in Database Engine Tuning Advisor。</li><li>注意右面的窗口中，wordload有三个选择：负载文件、表、查询语句，因为我们选择了查询语句的方式，所以就不需要修改这个radio option了。</li><li>点左上角的Start Analysis按钮</li><li>出现了一个分析结果窗口，其中，在Index Recommendations中，我们发现了一条信息：大意是，在表t1上增加一个非聚集索引索引：t2+t1。</li><li>在当前窗口的上方菜单上，选择Action菜单，选择Apply Recommendations，系统会自动创建这个索引。重新运行batch，呵呵，死锁没有了。</li></ul><p>为什么会死锁呢？再回顾一下两个sp的写法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> PROC p1 @p1 <span class="built_in">int</span> <span class="keyword">AS</span></span><br><span class="line">      <span class="keyword">SELECT</span> c2, c3 <span class="keyword">FROM</span> t1 <span class="keyword">WHERE</span> c2 <span class="keyword">BETWEEN</span> @p1 <span class="keyword">AND</span> @p1+<span class="number">1</span></span><br><span class="line">   <span class="keyword">GO</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="keyword">CREATE</span> PROC p2 @p1 <span class="built_in">int</span> <span class="keyword">AS</span></span><br><span class="line">         <span class="keyword">UPDATE</span> t1 <span class="keyword">SET</span> c2 = c2+<span class="number">1</span> <span class="keyword">WHERE</span> c1 = @p1</span><br><span class="line">         <span class="keyword">UPDATE</span> t1 <span class="keyword">SET</span> c2 = c2<span class="number">-1</span> <span class="keyword">WHERE</span> c1 = @p1</span><br><span class="line">   <span class="keyword">GO</span></span><br></pre></td></tr></table></figure><p>很奇怪吧！p1没有insert，没有delete，没有update，只是一个select，p2才是update。这个和我们前面说过的，trans1里面updata A，update B；trans2里面upate B，update A，根本不贴边啊！<br>   那么，什么导致了死锁？</p><p>   需要从事件日志中，看sql的死锁信息:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Spid X is running this query (line 2 of proc [p1], inputbuffer “… EXEC p1 4 …”):</span><br><span class="line">   <span class="keyword">SELECT</span> c2, c3 <span class="keyword">FROM</span> t1 <span class="keyword">WHERE</span> c2 <span class="keyword">BETWEEN</span> @p1 <span class="keyword">AND</span> @p1+<span class="number">1</span></span><br><span class="line">   Spid Y <span class="keyword">is</span> running this <span class="keyword">query</span> (line <span class="number">2</span> <span class="keyword">of</span> proc [p2], inputbuffer “EXEC p2 <span class="number">4</span>”):</span><br><span class="line">   <span class="keyword">UPDATE</span> t1 <span class="keyword">SET</span> c2 = c2+<span class="number">1</span> <span class="keyword">WHERE</span> c1 = @p1</span><br><span class="line"></span><br><span class="line">   The <span class="keyword">SELECT</span> <span class="keyword">is</span> waiting <span class="keyword">for</span> a <span class="keyword">Shared</span> <span class="keyword">KEY</span> <span class="keyword">lock</span> <span class="keyword">on</span> <span class="keyword">index</span> t1.cidx.  The <span class="keyword">UPDATE</span> holds a conflicting X lock.</span><br><span class="line">   The <span class="keyword">UPDATE</span> <span class="keyword">is</span> waiting <span class="keyword">for</span> an eXclusive <span class="keyword">KEY</span> <span class="keyword">lock</span> <span class="keyword">on</span> <span class="keyword">index</span> t1.idx1.  The <span class="keyword">SELECT</span> holds a conflicting S lock.</span><br></pre></td></tr></table></figure><p>首先，我们看看p1的执行计划。怎么看呢？可以执行set statistics profile on，这句就可以了。下面是p1的执行计划</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> c2, c3 <span class="keyword">FROM</span> t1 <span class="keyword">WHERE</span> c2 <span class="keyword">BETWEEN</span> @p1 <span class="keyword">AND</span> @p1+<span class="number">1</span></span><br><span class="line">        <span class="keyword">Nested</span> Loops(<span class="keyword">Inner</span> <span class="keyword">Join</span>, <span class="keyword">OUTER</span> <span class="keyword">REFERENCES</span>:([Uniq1002], [t1].[c1]))</span><br><span class="line">               <span class="keyword">Index</span> Seek(<span class="keyword">OBJECT</span>:([t1].[idx1]), SEEK:([t1].[c2] &gt;= [@p1] <span class="keyword">AND</span> [t1].[c2] &lt;= [@p1]+(<span class="number">1</span>)) ORDERED FORWARD)</span><br><span class="line">                     Clustered <span class="keyword">Index</span> Seek(<span class="keyword">OBJECT</span>:([t1].[cidx]), SEEK:([t1].[c1]=[t1].[c1] <span class="keyword">AND</span> [Uniq1002]=[Uniq1002]) LOOKUP ORDERED FORWARD)</span><br></pre></td></tr></table></figure><p>我们看到了一个nested loops，第一行，利用索引t1.c2来进行seek，seek出来的那个rowid，在第二行中，用来通过聚集索引来查找整行的数据。这是什么？就是bookmark lookup啊！为什么？因为我们需要的c2、c3不能完全的被索引t1.c1带出来，所以需要书签查找。<br>   好，我们接着看p2的执行计划。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> t1 <span class="keyword">SET</span> c2 = c2+<span class="number">1</span> <span class="keyword">WHERE</span> c1 = @p1</span><br><span class="line">         Clustered <span class="keyword">Index</span> <span class="keyword">Update</span>(<span class="keyword">OBJECT</span>:([t1].[cidx]), <span class="keyword">OBJECT</span>:([t1].[idx1]), <span class="keyword">SET</span>:([t1].[c2] = [Expr1004]))</span><br><span class="line">               <span class="keyword">Compute</span> Scalar(<span class="keyword">DEFINE</span>:([Expr1013]=[Expr1013]))</span><br><span class="line">                     <span class="keyword">Compute</span> Scalar(<span class="keyword">DEFINE</span>:([Expr1004]=[t1].[c2]+(<span class="number">1</span>), [Expr1013]=<span class="keyword">CASE</span> <span class="keyword">WHEN</span> <span class="keyword">CASE</span> <span class="keyword">WHEN</span> ...</span><br><span class="line">                           Top(ROWCOUNT est <span class="number">0</span>)</span><br><span class="line">                                 Clustered <span class="keyword">Index</span> Seek(<span class="keyword">OBJECT</span>:([t1].[cidx]), SEEK:([t1].[c1]=[@p1]) ORDERED FORWARD)</span><br></pre></td></tr></table></figure><p>通过聚集索引的seek找到了一行，然后开始更新。这里注意的是，update的时候，它会申请一个针对clustered index的X锁的。</p><p>   实际上到这里，我们就明白了为什么update会对select产生死锁。update的时候，会申请一个针对clustered index的X锁，这样就阻塞住了（注意，不是死锁！）select里面最后的那个clustered index seek。死锁的另一半在哪里呢？注意我们的select语句，c2存在于索引idx1中，c1是一个聚集索引cidx。问题就在这里！我们在p2中更新了c2这个值，所以sqlserver会自动更新包含c2列的非聚集索引：idx1。而idx1在哪里？就在我们刚才的select语句中。而对这个索引列的更改，意味着索引集合的某个行或者某些行，需要重新排列，而重新排列，需要一个X锁。<br>   SO………，问题就这样被发现了。</p><p>   总结一下，就是说，某个query使用非聚集索引来select数据，那么它会在非聚集索引上持有一个S锁。当有一些select的列不在该索引上，它需要根据rowid找到对应的聚集索引的那行，然后找到其他数据。而此时，第二个的查询中，update正在聚集索引上忙乎：定位、加锁、修改等。但因为正在修改的某个列，是另外一个非聚集索引的某个列，所以此时，它需要同时更改那个非聚集索引的信息，这就需要在那个非聚集索引上，加第二个X锁。select开始等待update的X锁，update开始等待select的S锁，死锁，就这样发生鸟。<br>   那么，为什么我们增加了一个非聚集索引，死锁就消失鸟？我们看一下，按照上文中自动增加的索引之后的执行计划：</p>   <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> c2, c3 <span class="keyword">FROM</span> t1 <span class="keyword">WHERE</span> c2 <span class="keyword">BETWEEN</span> @p1 <span class="keyword">AND</span> @p1+<span class="number">1</span></span><br><span class="line">   <span class="keyword">Index</span> Seek(<span class="keyword">OBJECT</span>:([deadlocktest].[dbo].[t1].[_dta_index_t1_7_2073058421__K2_K1_3]), SEEK:([deadlocktest].[dbo].[t1].[c2] &gt;= [@p1] <span class="keyword">AND</span> [deadlocktest].[dbo].[t1].[c2] &lt;= [@p1]+(<span class="number">1</span>)) ORDERED FORWARD)</span><br></pre></td></tr></table></figure><p>哦，对于clustered index的需求没有了，因为增加的覆盖索引已经足够把所有的信息都select出来。就这么简单。</p><p>   实际上，在sqlserver 2005中，如果用profiler来抓eventid：1222，那么会出现一个死锁的图，很直观的说。</p><p>   下面的方法，有助于将死锁减至最少（详细情况，请看SQLServer联机帮助，搜索：将死锁减至最少即可。</p><ul><li>按同一顺序访问对象。</li><li>避免事务中的用户交互。</li><li>保持事务简短并处于一个批处理中。</li><li>使用较低的隔离级别。</li><li>使用基于行版本控制的隔离级别。</li><li>将 READ_COMMITTED_SNAPSHOT 数据库选项设置为 ON，使得已提交读事务使用行版本控制。</li><li>使用快照隔离。</li><li>使用绑定连接</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;死锁现象&quot;&gt;&lt;a href=&quot;#死锁现象&quot; class=&quot;headerlink&quot; title=&quot;死锁现象&quot;&gt;&lt;/a&gt;死锁现象&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;表现一&lt;/strong&gt;：一个用户A 访问表A(锁住了表A)，然后又访问表B，另一个用户B 访问表B(锁住了表B)，然后企图访问表A，这时用户A由于用户B已经锁住表B，它必须等待用户B释放表B，才能继续，好了他老人家就只好老老实实在这等了，同样用户B要等用户A释放表A才能继续这就死锁了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解决方法&lt;br&gt;这种死锁是由于你的程序的BUG产生的，除了调整你的程序的逻辑别无他法&lt;br&gt;　　仔细分析你程序的逻辑：&lt;br&gt;　　1：尽量避免同时锁定两个资源&lt;br&gt;　　2: 必须同时锁定两个资源时，要保证在任何时刻都应该按照相同的顺序来锁定资源.&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="https://linbei.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="随笔" scheme="https://linbei.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="SqlServer" scheme="https://linbei.top/tags/SqlServer/"/>
    
  </entry>
  
  <entry>
    <title>内网穿透工具Ngrock和frp</title>
    <link href="https://linbei.top/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/"/>
    <id>https://linbei.top/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/</id>
    <published>2019-03-13T09:32:57.000Z</published>
    <updated>2020-05-23T01:20:25.658Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Sunny-Ngrok使用流程如下：https-www-ngrok-cc-user"><a href="#Sunny-Ngrok使用流程如下：https-www-ngrok-cc-user" class="headerlink" title="Sunny-Ngrok使用流程如下：https://www.ngrok.cc/user"></a>Sunny-Ngrok使用流程如下：<a href="https://www.ngrok.cc/user" target="_blank" rel="noopener">https://www.ngrok.cc/user</a></h2><h3 id="点击网址，并进行注册"><a href="#点击网址，并进行注册" class="headerlink" title="点击网址，并进行注册"></a>点击网址，并进行注册</h3><a id="more"></a><img src="/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/2020-03-13-16-59-05.png" class><h3 id="获取免费的，点击购买"><a href="#获取免费的，点击购买" class="headerlink" title="获取免费的，点击购买"></a>获取免费的，点击购买</h3><img src="/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/2020-03-13-16-59-40.png" class><h3 id="前置域名"><a href="#前置域名" class="headerlink" title="前置域名"></a>前置域名</h3><p>输入xxxx 会变成 <a href="http://xxxx.free.idcfengye.com" target="_blank" rel="noopener">http://xxxx.free.idcfengye.com</a> 本地端口：由于我是本地测试，所以使用127.0.0.1:8080</p><img src="/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/2020-03-13-17-00-50.png" class><h3 id="进入隧道管理，可以查看相关信息。并下载客户端"><a href="#进入隧道管理，可以查看相关信息。并下载客户端" class="headerlink" title="进入隧道管理，可以查看相关信息。并下载客户端"></a>进入隧道管理，可以查看相关信息。并下载客户端</h3><p>其中有各种系统版本的，本人下载的是win版本的</p><img src="/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/2020-03-13-17-02-02.png" class><h3 id="启动cmd窗口。在窗口数据渠道id-多个用逗号隔开"><a href="#启动cmd窗口。在窗口数据渠道id-多个用逗号隔开" class="headerlink" title="启动cmd窗口。在窗口数据渠道id 多个用逗号隔开"></a>启动cmd窗口。在窗口数据渠道id 多个用逗号隔开</h3><img src="/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/2020-03-13-17-02-43.png" class><h3 id="ok-域名就是之前输入的-前置域名。将域名填写到支付宝的配置文件中-即可"><a href="#ok-域名就是之前输入的-前置域名。将域名填写到支付宝的配置文件中-即可" class="headerlink" title="ok. 域名就是之前输入的 前置域名。将域名填写到支付宝的配置文件中 即可"></a>ok. 域名就是之前输入的 前置域名。将域名填写到支付宝的配置文件中 即可</h3><img src="/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/2020-03-13-17-03-17.png" class><p>对于没有云服务器的个人来说，使用Sunny-Ngrock还是比较方便的，其中有免费和付费的。个人使用过后感觉由于是免费的用的人也比较多，有时候会比较卡，会出现经常卡顿或者掉线的情况。</p><h2 id="frp-nginx-配置多人共用的http-内网穿透服务"><a href="#frp-nginx-配置多人共用的http-内网穿透服务" class="headerlink" title="frp + nginx 配置多人共用的http 内网穿透服务"></a>frp + nginx 配置多人共用的http 内网穿透服务</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>本人由于在调式微信公众号和小程序，所以要用到内网穿透，这样调试起来就比较容易一些。<br>frp 是一个用Go语言开发的，可用于内网穿透的高性能的反向代理应用，支持 tcp, udp 、 http 和 https。可将一个部署在本机的web服务映射到外网。<br>本文主要讲如何基于frp + nginx 配置http 内网穿透服务，承载多人同时使用，从而支持微信公众号，微信小程序的本地开发调试<br>所需资源：</p><ul><li>一台公网服务器或者VPS（本人用的 阿里云的主机）</li><li>一个指向到此台公网服务器的域名（本文以ikeysun.com 为例）</li></ul><p>本文涉及的环境<br>nginx 1.10.1<br>frp 0.22.0<br>Windows 10</p><h3 id="frp-原理"><a href="#frp-原理" class="headerlink" title="frp 原理"></a>frp 原理</h3><p>请仔细阅读原理，在不理解原理的情况下上手配置容易出错，且很难定位原因。这都是本人所经历的惨痛教训）<br>以本人搭建的frp内网穿透服务为例：<br><strong>第一步</strong>： 配置无误的情况下，frp服务端和frp客户端先后启动，建立通信隧道，其中：frp服务端监听http 7071端口（此端口可自定义），接收此端口下所有外网用户请求，frp客户端代理本地想要暴露给外网的web服务端口，本文以8585 , 8686 端口为例</p><p><strong>第二步</strong>： 通过配置nginx反向代理，将指向本台公网服务器的dev.msh.com 下的子域名，映射到服务器的7071端口，也就是frp监听的那个端口。 外网用户访问iot.ikeesun.com下的子域名，例如 ：<br>a.iot.ikeysun.com<br>b.iot.ikeysun.com<br>等同于访问ikeysun.com：7071，会 触发 frp服务端和客户端的互动，从而http请求由frp服务端传递到frp客户端</p><p><strong>第三步</strong>： frp客户端收到http请求后，基于自定义配置，则做如下处理：<br>监听到http请求中的域名为 a.iot.ikeysun.com，则将请求转发到我本地的8585web服务端口<br>监听到http请求中的域名为 b.iot.ikeysun.com，则将请求转发到我本地的8686web服务端口</p><p><strong>第四步</strong>： 本地的web服务收到http请求后，对请求做处理，并完成响应</p><p><strong>第五步</strong>： frp客户端将响应结果回传给frp的服务端。服务端最终将响应回传给外网用户</p><p><strong>第六步</strong>： 最终的实测效果为：<br>访问 a.iot.ikeysun.com，等同于访问我本地的localhost:8585<br>访问 b.iot.ikeysun.com，等同于访问我本地的localhost:8686</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><h4 id="在域名解析后台配置子域名"><a href="#在域名解析后台配置子域名" class="headerlink" title="在域名解析后台配置子域名"></a>在域名解析后台配置子域名</h4><p>本文以ikeysun.com 为例：<br>登录域名的解析后台，在ikeysun.com下增加两条A记录： iot, *.iot,记录值为部署frp服务端的公网服务器的ip。</p><p>代表iot.ikeysun.com下的所有的子域名，会全部指向此台公网服务器。</p><h3 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h3><h4 id="frp服务端安装配置"><a href="#frp服务端安装配置" class="headerlink" title="frp服务端安装配置"></a>frp服务端安装配置</h4><p>修改配置文件<br>解压后进入解压目录，找到frps.ini文件, 做如下配置 。配置说明请参见各项对应的注释</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="comment"># frp监听的端口，用作服务端和客户端通信</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务端通过此端口接监听和接收公网用户的http请求</span></span><br><span class="line"><span class="attr">vhost_http_port</span> = <span class="number">7071</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># frp提供了一个控制台，可以通过这个端口访问到控制台。可查看frp当前有多少代理连接以及对应的状态</span></span><br><span class="line"><span class="attr">dashboard_port</span> = <span class="number">7500</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务端的subdomain_host需要和客户端配置文件中的subdomain、local_port配合使用，</span></span><br><span class="line"><span class="comment"># 可通过&#123;subdomain&#125;.&#123;subdomain_host&#125; 的域名格式来访问自己本地的 web 服务。</span></span><br><span class="line"><span class="comment"># 假如服务端的subdomain_host为iot.ikeysun.com，客户端某个配置组中的</span></span><br><span class="line"><span class="comment"># subdomain为a,local_port为8585，</span></span><br><span class="line"><span class="comment"># 则：</span></span><br><span class="line"><span class="comment"># 访问 a.iot.ikeysun.com ，等同于访问本地的localhost:8585</span></span><br><span class="line"></span><br><span class="line"><span class="attr">subdomain_host</span> = iot.ikeysun.com</span><br></pre></td></tr></table></figure><p>启动frp服务端</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\Frp\frp_0.29.0_windows_amd64\frp_0.29.0_windows_amd64&gt;frps -c frps.ini</span><br></pre></td></tr></table></figure><h3 id="nginx反向代理配置"><a href="#nginx反向代理配置" class="headerlink" title="nginx反向代理配置"></a>nginx反向代理配置</h3><p>修改 nginx.conf 文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># frp的接收http请求的反向代理</span></span><br><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">listen</span> <span class="number">80</span><span class="string">;</span></span><br><span class="line">    <span class="string">server_name</span> <span class="string">*.iot.ikeysun.com</span>  <span class="string">iot.ikeysun.com;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">location</span> <span class="string">/</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="comment"># 7071端口即为frp监听的http端口</span></span><br><span class="line">        <span class="string">proxy_pass</span> <span class="string">http://127.0.0.1:7071;</span></span><br><span class="line">        <span class="string">proxy_set_header</span> <span class="string">Host</span> <span class="string">$host:80;</span></span><br><span class="line">        <span class="string">proxy_set_header</span> <span class="string">X-Real-IP</span> <span class="string">$remote_addr;</span></span><br><span class="line">        <span class="string">proxy_set_header</span> <span class="string">X-Forwarded-For</span> <span class="string">$proxy_add_x_forwarded_for;</span></span><br><span class="line"></span><br><span class="line">        <span class="string">proxy_set_header</span> <span class="string">Upgrade</span> <span class="string">$http_upgrade;</span></span><br><span class="line">        <span class="string">proxy_set_header</span> <span class="string">Connection</span> <span class="string">"upgrade"</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line">        <span class="string">proxy_connect_timeout</span> <span class="string">7d;</span></span><br><span class="line">        <span class="string">proxy_send_timeout</span> <span class="string">7d;</span></span><br><span class="line">        <span class="string">proxy_read_timeout</span> <span class="string">7d;</span></span><br><span class="line"></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line">    <span class="comment"># 防止爬虫抓取</span></span><br><span class="line">    <span class="string">if</span> <span class="string">($http_user_agent</span> <span class="string">~*</span> <span class="string">"360Spider|JikeSpider|Spider|spider|bot|Bot|2345Explorer|curl|wget|webZIP|qihoobot|Baiduspider|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot|NSPlayer|bingbot"</span><span class="string">)</span></span><br><span class="line">        <span class="string">&#123;</span></span><br><span class="line">            <span class="string">return</span> <span class="number">403</span><span class="string">;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>让nginx重新加载配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\nginx-1.16.0&gt;nginx -s reload</span><br></pre></td></tr></table></figure><p>防火墙的端口记得一定要放开，包括阿里云后台的安全规则</p><h3 id="客户端安装配置"><a href="#客户端安装配置" class="headerlink" title="客户端安装配置"></a>客户端安装配置</h3><p>下载客户端：去github上面下载最新版的 windows客户端，找到 frp_0.23.1_windows_amd64.zip，点击下载即可<br>解压后，编辑 frpc.ini 文件</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="comment"># 部署frp服务端的公网服务器的ip</span></span><br><span class="line"><span class="attr">server_addr</span> = <span class="number">39.100</span>.<span class="number">107.169</span></span><br><span class="line"><span class="comment"># 和服务端的bind_port保持一致</span></span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 代理服务一 ，[]内的代理服务名称在全局范围内确保唯一，每个人的每个代理服务不能重名，</span></span><br><span class="line"><span class="comment"># 否则会影响正常使用。</span></span><br><span class="line"> <span class="section">[http-a]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="comment"># local_port代表你想要暴露给外网的本地web服务端口</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">8585</span></span><br><span class="line"><span class="comment"># subdomain 在全局范围内要确保唯一，每个代理服务的subdomain不能重名，否则会影响正常使用。</span></span><br><span class="line"><span class="comment"># 客户端的subdomain需和服务端的subdomain_host配合使用</span></span><br><span class="line"><span class="attr">subdomain</span> = a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 代理服务二  ，各项配置说明请参考配置组一</span></span><br><span class="line"><span class="section">[http-b]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_port</span> = <span class="number">8686</span></span><br><span class="line"><span class="attr">subdomain</span> = b</span><br></pre></td></tr></table></figure><p>启动 客户端<br>在frp解压目录下右键打开 powershell 或者cmd，执行如下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./frpc.exe -c .\frpc.ini</span><br></pre></td></tr></table></figure><p>如果窗口提示 『start proxy success』 ，则代表frp服务端和frp客户端的通信隧道建立成功```</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Sunny-Ngrok使用流程如下：https-www-ngrok-cc-user&quot;&gt;&lt;a href=&quot;#Sunny-Ngrok使用流程如下：https-www-ngrok-cc-user&quot; class=&quot;headerlink&quot; title=&quot;Sunny-Ngrok使用流程如下：https://www.ngrok.cc/user&quot;&gt;&lt;/a&gt;Sunny-Ngrok使用流程如下：&lt;a href=&quot;https://www.ngrok.cc/user&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.ngrok.cc/user&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&quot;点击网址，并进行注册&quot;&gt;&lt;a href=&quot;#点击网址，并进行注册&quot; class=&quot;headerlink&quot; title=&quot;点击网址，并进行注册&quot;&gt;&lt;/a&gt;点击网址，并进行注册&lt;/h3&gt;
    
    </summary>
    
    
      <category term="环境搭建" scheme="https://linbei.top/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="随笔" scheme="https://linbei.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="阿里云" scheme="https://linbei.top/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>Hexo添加相册</title>
    <link href="https://linbei.top/Hexo%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%86%8C/"/>
    <id>https://linbei.top/Hexo%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%86%8C/</id>
    <published>2019-03-13T05:12:57.000Z</published>
    <updated>2020-05-23T01:20:25.470Z</updated>
    
    <content type="html"><![CDATA[<p>最终效果请看这里：<a href="https://hanlinbei.github.io/photos" target="_blank" rel="noopener">https://hanlinbei.github.io/photos</a></p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><h3 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h3><ul><li><p>我使用的主题是hexo-theme-yilia，其中实现相册功能的方案是同步instagram上面的图片，但是现在instagram被禁，不能使用了</p></li><li><p>下面是通过自己的方式实现了相册功能，其中的样式还是使用该主题提供的。</p><a id="more"></a><h3 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h3></li><li><p>在github上新建一个仓库，主要用于存储图片，可以通过url访问到，也方便管理</p></li><li><p>将要放到相册的图片处理成json格式的数据，然后进行访问，这里json的格式需要配合要使用的样式，所以需要处理成特定格式的json数据，下面会给出</p></li><li><p>图片裁剪，因为相册显示的样式最好是正方形的的图片，这里使用脚本处理一下</p></li><li><p>图片压缩，相册显示的图片是压缩后的图片，提高加载的速度，打开后的图片是原图。</p></li></ul><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><h3 id="github操作"><a href="#github操作" class="headerlink" title="github操作"></a>github操作</h3><ul><li>建立一个用于存储相册的仓库，我这里建立了名为BlogPicturep的仓库<img src="/Hexo%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%86%8C/2020-03-13-13-48-33.png" class></li><li>关于git的命令行操作和配置不再给出</li></ul><h3 id="博客操作"><a href="#博客操作" class="headerlink" title="博客操作"></a>博客操作</h3><ul><li><p>在博客的source文件夹下建立一个photos文件夹</p></li><li><p>如果是通过hexo new 的方式创建的记得把index.md文件删掉，我试过不删掉就渲染不出来。</p></li><li><p>将样式文件放到photos文件夹下，样式文件我都放到了github上：<a href="https://github.com/hanlinbei/hanlinbei.github.io/tree/master/photos" target="_blank" rel="noopener">https://github.com/hanlinbei/hanlinbei.github.io/tree/master/photos</a> 在github上一般很难下载单个文件夹，在这里我可以推荐一个gitzip的谷歌浏览器插件，可以右键很方便的把文件打包成一个压缩包下载，不必下载整个项目。整个项目很难下载得下来。</p></li><li><p>修改ins.js文件，主要是里面的render函数</p></li><li><p>其中的url对应到你的github放图片的地址</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> render = <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">var</span> ulTmpl = <span class="string">""</span>;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>, len2 = res.list.length; j &lt; len2; j++) &#123;</span><br><span class="line">   <span class="keyword">var</span> data = res.list[j].arr;</span><br><span class="line">   <span class="keyword">var</span> liTmpl = <span class="string">""</span>;</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = data.link.length; i &lt; len; i++) &#123;</span><br><span class="line">     <span class="keyword">var</span> minSrc = <span class="string">'https://raw.githubusercontent.com/lawlite19/blog-back-up/master/min_photos/'</span> + data.link[i];</span><br><span class="line">     <span class="keyword">var</span> src = <span class="string">'https://raw.githubusercontent.com/lawlite19/blog-back-up/master/photos/'</span> + data.link[i];</span><br><span class="line">     <span class="keyword">var</span> type = data.type[i];</span><br><span class="line">     <span class="keyword">var</span> target = src + (type === <span class="string">'video'</span> ? <span class="string">'.mp4'</span> : <span class="string">'.jpg'</span>);</span><br><span class="line">     src += <span class="string">''</span>;</span><br><span class="line">     liTmpl += <span class="string">'&lt;figure class="thumb" itemprop="associatedMedia" itemscope="" itemtype="http://schema.org/ImageObject"&gt;\</span></span><br><span class="line"><span class="string">           &lt;a href="'</span> + src + <span class="string">'" itemprop="contentUrl" data-size="1080x1080" data-type="'</span> + type + <span class="string">'" data-target="'</span> + src + <span class="string">'"&gt;\</span></span><br><span class="line"><span class="string">             &lt;img class="reward-img" data-type="'</span> + type + <span class="string">'" data-src="'</span> + minSrc + <span class="string">'" src="/assets/img/empty.png" itemprop="thumbnail" onload="lzld(this)"&gt;\</span></span><br><span class="line"><span class="string">           &lt;/a&gt;\</span></span><br><span class="line"><span class="string">           &lt;figcaption style="display:none" itemprop="caption description"&gt;'</span> + data.text[i] + <span class="string">'&lt;/figcaption&gt;\</span></span><br><span class="line"><span class="string">       &lt;/figure&gt;'</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   ulTmpl = ulTmpl + <span class="string">'&lt;section class="archives album"&gt;&lt;h1 class="year"&gt;'</span> + data.year + <span class="string">'年&lt;em&gt;'</span> + data.month + <span class="string">'月&lt;/em&gt;&lt;/h1&gt;\</span></span><br><span class="line"><span class="string">   &lt;ul class="img-box-ul"&gt;'</span> + liTmpl + <span class="string">'&lt;/ul&gt;\</span></span><br><span class="line"><span class="string">   &lt;/section&gt;'</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><img src="/Hexo%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%86%8C/2020-03-13-13-56-29.png" class><p>地址一定是点击这个download后浏览器框上出现得地址</p><img src="/Hexo%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%86%8C/2020-03-13-13-57-33.png" class></li></ul><h3 id="图片处理"><a href="#图片处理" class="headerlink" title="图片处理"></a>图片处理</h3><ul><li><p>python脚本文件都放在了这里：<a href="https://github.com/hanlinbei/BlogPicture" target="_blank" rel="noopener">https://github.com/hanlinbei/BlogPicture</a><br>(1). 裁剪图片</p></li><li><p>去图片的中间部分，裁剪为正方形</p></li><li><p>对应的裁剪函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cut_by_ratio</span><span class="params">(self)</span>:</span>  </span><br><span class="line">    <span class="string">"""按照图片长宽进行分割</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ------------</span></span><br><span class="line"><span class="string">    取中间的部分，裁剪成正方形</span></span><br><span class="line"><span class="string">    """</span>  </span><br><span class="line">    im = Image.open(self.infile)  </span><br><span class="line">    (x, y) = im.size  </span><br><span class="line">    <span class="keyword">if</span> x &gt; y:  </span><br><span class="line">        region = (int(x/<span class="number">2</span>-y/<span class="number">2</span>), <span class="number">0</span>, int(x/<span class="number">2</span>+y/<span class="number">2</span>), y)  </span><br><span class="line">        <span class="comment">#裁切图片  </span></span><br><span class="line">        crop_img = im.crop(region)  </span><br><span class="line">        <span class="comment">#保存裁切后的图片  </span></span><br><span class="line">        crop_img.save(self.outfile)</span><br><span class="line">    <span class="keyword">elif</span> x &lt; y:  </span><br><span class="line">        region = (<span class="number">0</span>, int(y/<span class="number">2</span>-x/<span class="number">2</span>), x, int(y/<span class="number">2</span>+x/<span class="number">2</span>))</span><br><span class="line">        <span class="comment">#裁切图片  </span></span><br><span class="line">        crop_img = im.crop(region)  </span><br><span class="line">        <span class="comment">#保存裁切后的图片  </span></span><br><span class="line">        crop_img.save(self.outfile)</span><br></pre></td></tr></table></figure><p>(2) 压缩图片<br>把图片进行压缩，方便相册的加载</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">compress</span><span class="params">(choose, des_dir, src_dir, file_list)</span>:</span></span><br><span class="line">   <span class="string">"""压缩算法，img.thumbnail对图片进行压缩，</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   参数</span></span><br><span class="line"><span class="string">   -----------</span></span><br><span class="line"><span class="string">   choose: str</span></span><br><span class="line"><span class="string">           选择压缩的比例，有4个选项，越大压缩后的图片越小</span></span><br><span class="line"><span class="string">   """</span></span><br><span class="line">   <span class="keyword">if</span> choose == <span class="string">'1'</span>:</span><br><span class="line">       scale = SIZE_normal</span><br><span class="line">   <span class="keyword">if</span> choose == <span class="string">'2'</span>:</span><br><span class="line">       scale = SIZE_small</span><br><span class="line">   <span class="keyword">if</span> choose == <span class="string">'3'</span>:</span><br><span class="line">       scale = SIZE_more_small</span><br><span class="line">   <span class="keyword">if</span> choose == <span class="string">'4'</span>:</span><br><span class="line">       scale = SIZE_more_small_small</span><br><span class="line">   <span class="keyword">for</span> infile <span class="keyword">in</span> file_list:</span><br><span class="line">       img = Image.open(src_dir+infile)</span><br><span class="line">       <span class="comment"># size_of_file = os.path.getsize(infile)</span></span><br><span class="line">       w, h = img.size</span><br><span class="line">       img.thumbnail((int(w/scale), int(h/scale)))</span><br><span class="line">       img.save(des_dir + infile)</span><br></pre></td></tr></table></figure><h3 id="github提交"><a href="#github提交" class="headerlink" title="github提交"></a>github提交</h3></li><li><p>处理完成之后需要将处理后的图片提交到github上</p></li><li><p>这里同样使用脚本的方式，需要将git命令行配置到环境变量中</p>  <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">git_operation</span><span class="params">()</span>:</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">git 命令行函数，将仓库提交</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">----------</span></span><br><span class="line"><span class="string">需要安装git命令行工具，并且添加到环境变量中</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">os.system(<span class="string">'git add --all'</span>)</span><br><span class="line">os.system(<span class="string">'git commit -m "add photos"'</span>)</span><br><span class="line">os.system(<span class="string">'git push origin master'</span>)</span><br></pre></td></tr></table></figure></li></ul><h3 id="json数据处理"><a href="#json数据处理" class="headerlink" title="json数据处理"></a>json数据处理</h3><ul><li><p>下面就需要将图片信息处理成json数据格式了，这里为重点</p></li><li><p>最终需要的json格式的数据如下图：</p><img src="/Hexo%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%86%8C/2020-03-13-14-08-54.png" class><p>这里我采用的方式是读取图片的名字作为其中的text的内容，图片的命名如下图</p><img src="/Hexo%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%86%8C/2020-03-13-14-09-31.png" class><p>最前面是日期，然后用_进行分隔<br>后面是图片的描述信息，注意不要包含_和.符号 这个命名一定要规范，不能有问题。<br>实现代码：<br>注意代码中../blog/source/photos/data.json是对应到我的博客的路径，这里根据需要改成自己博客的路径</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">ef handle_photo():</span><br><span class="line">   <span class="string">'''根据图片的文件名处理成需要的json格式的数据</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   -----------</span></span><br><span class="line"><span class="string">   最后将data.json文件存到博客的source/photos文件夹下</span></span><br><span class="line"><span class="string">   '''</span></span><br><span class="line">   src_dir, des_dir = <span class="string">"photos/"</span>, <span class="string">"min_photos/"</span></span><br><span class="line">   file_list = list_img_file(src_dir)</span><br><span class="line">   list_info = []</span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> range(len(file_list)):</span><br><span class="line">       filename = file_list[i]</span><br><span class="line">       date_str, info = filename.split(<span class="string">"_"</span>)</span><br><span class="line">       info, _ = info.split(<span class="string">"."</span>)</span><br><span class="line">       date = datetime.strptime(date_str, <span class="string">"%Y-%m-%d"</span>)</span><br><span class="line">       year_month = date_str[<span class="number">0</span>:<span class="number">7</span>]</span><br><span class="line">       <span class="keyword">if</span> i == <span class="number">0</span>:  <span class="comment"># 处理第一个文件</span></span><br><span class="line">           new_dict = &#123;<span class="string">"date"</span>: year_month, <span class="string">"arr"</span>:&#123;<span class="string">'year'</span>: date.year,</span><br><span class="line">                                                                  <span class="string">'month'</span>: date.month,</span><br><span class="line">                                                                  <span class="string">'link'</span>: [filename],</span><br><span class="line">                                                                  <span class="string">'text'</span>: [info],</span><br><span class="line">                                                                  <span class="string">'type'</span>: [<span class="string">'image'</span>]</span><br><span class="line">                                                                  &#125;</span><br><span class="line">                                       &#125;</span><br><span class="line">           list_info.append(new_dict)</span><br><span class="line">       <span class="keyword">elif</span> year_month != list_info[<span class="number">-1</span>][<span class="string">'date'</span>]:  <span class="comment"># 不是最后的一个日期，就新建一个dict</span></span><br><span class="line">           new_dict = &#123;<span class="string">"date"</span>: year_month, <span class="string">"arr"</span>:&#123;<span class="string">'year'</span>: date.year,</span><br><span class="line">                                                  <span class="string">'month'</span>: date.month,</span><br><span class="line">                                                  <span class="string">'link'</span>: [filename],</span><br><span class="line">                                                  <span class="string">'text'</span>: [info],</span><br><span class="line">                                                  <span class="string">'type'</span>: [<span class="string">'image'</span>]</span><br><span class="line">                                                  &#125;</span><br><span class="line">                       &#125;</span><br><span class="line">           list_info.append(new_dict)</span><br><span class="line">       <span class="keyword">else</span>:  <span class="comment"># 同一个日期</span></span><br><span class="line">           list_info[<span class="number">-1</span>][<span class="string">'arr'</span>][<span class="string">'link'</span>].append(filename)</span><br><span class="line">           list_info[<span class="number">-1</span>][<span class="string">'arr'</span>][<span class="string">'text'</span>].append(info)</span><br><span class="line">           list_info[<span class="number">-1</span>][<span class="string">'arr'</span>][<span class="string">'type'</span>].append(<span class="string">'image'</span>)</span><br><span class="line">   list_info.reverse()  <span class="comment"># 翻转</span></span><br><span class="line">   final_dict = &#123;<span class="string">"list"</span>: list_info&#125;</span><br><span class="line">   <span class="keyword">with</span> open(<span class="string">"../lawlite19.github.io/source/photos/data.json"</span>,<span class="string">"w"</span>) <span class="keyword">as</span> fp:</span><br><span class="line">       json.dump(final_dict, fp)</span><br></pre></td></tr></table></figure></li></ul><p>每次图片有改动都需要执行此脚本文件<br>效果展示</p><img src="/Hexo%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%86%8C/2020-03-13-14-13-07.png" class><h3 id="可能会遇到得问题"><a href="#可能会遇到得问题" class="headerlink" title="可能会遇到得问题"></a>可能会遇到得问题</h3><h4 id="缩略图不显示"><a href="#缩略图不显示" class="headerlink" title="缩略图不显示"></a>缩略图不显示</h4><p>首先，去下载“empty.png” <a href="https://github.com/hanlinbei/hanlinbei.github.io/blob/master/assets/img/empty.png" target="_blank" rel="noopener">点这里</a><br>直接右键另存，保存为“empty.png”。名字也要一样，别问为什么，实现了，自己再去看源码。<br>在你博客的本地仓库source下新建一个文件夹命名为assets,再在assets下新建一个文件夹命名为img。最后把empty.png放到img里面。我的结果如下：</p><img src="/Hexo%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%86%8C/2020-03-13-14-17-02.png" class><p>这样做好像就完事了，可以成功看到缩略图显示出来。其实操作本不复杂严格按照教程来，细心点</p><h4 id="网页没有渲染出来"><a href="#网页没有渲染出来" class="headerlink" title="网页没有渲染出来"></a>网页没有渲染出来</h4><p>如果是github操作一定要及时查看邮件，如果渲染不出来有错误你会收到github发送过来的邮件</p><img src="/Hexo%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%86%8C/2020-03-13-14-21-24.png" class><p>如果没有错误记得请一下浏览器的缓存，可能会是浏览器缓存造成的 刷新还是原来的页面。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最终效果请看这里：&lt;a href=&quot;https://hanlinbei.github.io/photos&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://hanlinbei.github.io/photos&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;h3 id=&quot;关于&quot;&gt;&lt;a href=&quot;#关于&quot; class=&quot;headerlink&quot; title=&quot;关于&quot;&gt;&lt;/a&gt;关于&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;我使用的主题是hexo-theme-yilia，其中实现相册功能的方案是同步instagram上面的图片，但是现在instagram被禁，不能使用了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下面是通过自己的方式实现了相册功能，其中的样式还是使用该主题提供的。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="环境搭建" scheme="https://linbei.top/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="随笔" scheme="https://linbei.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="阿里云" scheme="https://linbei.top/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="Hexo" scheme="https://linbei.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo主题变化与添加插件</title>
    <link href="https://linbei.top/Hexo%E4%B8%BB%E9%A2%98%E5%8F%98%E6%8D%A2%E4%B8%8E%E6%B7%BB%E5%8A%A0%E6%8F%92%E4%BB%B6/"/>
    <id>https://linbei.top/Hexo%E4%B8%BB%E9%A2%98%E5%8F%98%E6%8D%A2%E4%B8%8E%E6%B7%BB%E5%8A%A0%E6%8F%92%E4%BB%B6/</id>
    <published>2019-03-12T04:12:57.000Z</published>
    <updated>2020-05-23T01:20:25.361Z</updated>
    
    <content type="html"><![CDATA[<h1 id="更换主题Theme及基本配置"><a href="#更换主题Theme及基本配置" class="headerlink" title="更换主题Theme及基本配置"></a>更换主题Theme及基本配置</h1><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>默认主题是landscape，在themes文件夹下，可以使用别人开发好的主题，这里有很多，我使用的是这一个<a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">https://github.com/litten/hexo-theme-yilia</a><br>下载之后放到themes文件夹下即可：git clone <a href="mailto:git@github.com">git@github.com</a>:litten/hexo-theme-yilia.git</p><a id="more"></a><h2 id="主题基本配置"><a href="#主题基本配置" class="headerlink" title="主题基本配置"></a>主题基本配置</h2><p>配置在_config.yml文件中，基本的配置尝试一下就知道了，不在给出<br>图片的位置<br>比如打赏的支付宝二维码图片，是在当前主题下的source/assets/img/下 （不是当前博客根目录）</p><img src="/Hexo%E4%B8%BB%E9%A2%98%E5%8F%98%E6%8D%A2%E4%B8%8E%E6%B7%BB%E5%8A%A0%E6%8F%92%E4%BB%B6/2020-03-12-20-51-10.png" class><p>配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 打赏基础设定：0-关闭打赏； 1-文章对应的md文件里有reward:<span class="literal">true</span>属性，才有打赏； 2-所有文章均有打赏</span></span><br><span class="line">reward_type: 1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 打赏wording</span></span><br><span class="line">reward_wording: '谢谢你请我吃糖果'</span><br><span class="line"><span class="meta">#</span><span class="bash"> 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/assets/img/alipay.jpg</span></span><br><span class="line">alipay: /assets/img/alipay.jpg</span><br><span class="line"><span class="meta">#</span><span class="bash"> 微信二维码图片地址</span></span><br><span class="line">weixin: /assets/img/weixin.png</span><br></pre></td></tr></table></figure><h2 id="文章评论设置"><a href="#文章评论设置" class="headerlink" title="文章评论设置"></a>文章评论设置</h2><p>很多默认的评论插件要么不维护了，要么需要翻墙的。不过有基于github开发的gittalk还是不错的。Gitalk 是一个基于 Github Issue 和 Preact 开发的评论插件。使用 Github 帐号登录，界面干净整洁，最喜欢的一点是支持 MarkDown语法</p><p>主要特性：</p><p>使用 Github 登录<br>支持多语言 [en, zh-CN, zh-TW, es-ES, fr]<br>支持个人或组织<br>无干扰模式（设置 distractionFreeMode 为 true 开启）<br>快捷键提交评论 （cmd|ctrl + enter）<br>支持MarkDown语法</p><p>在layout/_partial/post目录下新增gitalk.ejs文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"gitalk-container"</span> style=<span class="string">"padding: 0px 30px 0px 30px;"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;link rel="stylesheet" href="https:/</span><span class="regexp">/cdn.jsdelivr.net/</span>npm/gitalk@<span class="number">1</span>/dist/gitalk.css<span class="string">"&gt;</span></span><br><span class="line"><span class="string">&lt;script src="</span>https:<span class="comment">//cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(&lt;%=theme.gitalk.enable%&gt;)&#123;</span><br><span class="line"> <span class="keyword">var</span> gitalk = <span class="keyword">new</span> Gitalk(&#123;</span><br><span class="line">   clientID: <span class="string">'&lt;%=theme.gitalk.ClientID%&gt;'</span>,</span><br><span class="line">   clientSecret: <span class="string">'&lt;%=theme.gitalk.ClientSecret%&gt;'</span>,</span><br><span class="line">   repo: <span class="string">'&lt;%=theme.gitalk.repo%&gt;'</span>,</span><br><span class="line">   owner: <span class="string">'&lt;%=theme.gitalk.githubID%&gt;'</span>,</span><br><span class="line">   admin: [<span class="string">'&lt;%=theme.gitalk.adminUser%&gt;'</span>],</span><br><span class="line">   id: <span class="string">'&lt;%= page.date %&gt;'</span>,</span><br><span class="line">   distractionFreeMode: <span class="string">'&lt;%=theme.gitalk.distractionFreeMode%&gt;'</span></span><br><span class="line">&#125;)</span><br><span class="line">gitalk.render(<span class="string">'gitalk-container'</span>)</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>修改source-src/css/目录下comment.scss文件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#disqus_thread</span>, <span class="selector-class">.duoshuo</span>, <span class="selector-class">.cloud-tie-wrapper</span>, <span class="selector-id">#SOHUCS</span>, <span class="selector-id">#gitment-ctn</span>, <span class="selector-id">#gitalk-container</span> &#123;</span><br><span class="line"> <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">30px</span> <span class="meta">!important</span>;</span><br><span class="line"> <span class="attribute">min-height</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#SOHUCS</span> &#123;</span><br><span class="line"> #SOHU_MAIN .module-cmt-list .block-cont-gw &#123;</span><br><span class="line">  <span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">dashed</span> <span class="selector-id">#c8c8c8</span> !<span class="selector-tag">important</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在layout/_partial目录下的article.ejs文件内新增gitalk相关的配置代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (theme.gitalk.enable)&#123; %&gt;</span><br><span class="line">       &lt;div id=<span class="string">"gitalk-container"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">       &lt;%- include post/gi</span>talk.ejs %&gt;</span><br><span class="line">  &lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>最后在yilia主题配置文件中新增gitalk相关的配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#gitalk评论</span></span><br><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">enable:</span>  <span class="literal">true</span></span><br><span class="line">  <span class="attr">githubID:</span> <span class="string">写自己github的ID</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">新建存放评论的仓库名</span></span><br><span class="line">  <span class="attr">ClientID:</span>  <span class="string">下面讲述如何书写</span> <span class="string">需要注册</span> <span class="string">OAuth</span> <span class="string">Application</span></span><br><span class="line">  <span class="attr">ClientSecret:</span>  <span class="string">下面讲述如何书</span> <span class="string">需要注册</span> <span class="string">OAuth</span> <span class="string">Application</span></span><br><span class="line"><span class="comment">#不这样书写容易报错</span></span><br><span class="line">  <span class="attr">adminUser:</span> <span class="string">"['仓库名','仓库名']"</span></span><br><span class="line">  <span class="attr">labels:</span> <span class="string">gitalk</span></span><br><span class="line">  <span class="attr">perPage:</span> <span class="number">15</span></span><br><span class="line">  <span class="attr">pagerDirection:</span> <span class="string">last</span></span><br><span class="line">  <span class="attr">createIssueManually:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">distractionFreeMode:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>当别人评论你的文章时，会需要它是授权。点击<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">https://github.com/settings/applications/new</a></p><p>进行注册。注册界面如下。</p><img src="/Hexo%E4%B8%BB%E9%A2%98%E5%8F%98%E6%8D%A2%E4%B8%8E%E6%B7%BB%E5%8A%A0%E6%8F%92%E4%BB%B6/2020-03-12-21-04-54.png" class><p>红色方框写的是博客地址就 ok 了！！<br>注册成功后，会获取到 Client ID/scerct 。如下图所示：</p><img src="/Hexo%E4%B8%BB%E9%A2%98%E5%8F%98%E6%8D%A2%E4%B8%8E%E6%B7%BB%E5%8A%A0%E6%8F%92%E4%BB%B6/2020-03-12-21-05-53.png" class><p>最终演示</p><img src="/Hexo%E4%B8%BB%E9%A2%98%E5%8F%98%E6%8D%A2%E4%B8%8E%E6%B7%BB%E5%8A%A0%E6%8F%92%E4%BB%B6/2020-03-12-21-06-26.png" class><h2 id="网站访问量显示"><a href="#网站访问量显示" class="headerlink" title="网站访问量显示"></a>网站访问量显示</h2><p>我使用了不蒜子第三方的统计插件，网址：<a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">http://ibruce.info/2015/04/04/busuanzi/</a><br>在themes\yilia\layout_partial下的footer.ejs中加入如下代码即可</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="keyword">async</span> src=<span class="string">"//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;span id="busuanzi_container_site_pv"&gt;</span></span><br><span class="line"><span class="regexp">  本站总访问量&lt;span id="busuanzi_value_site_pv"&gt;&lt;/</span>span&gt;次</span><br><span class="line">&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">&lt;span id="busuanzi_container_site_uv"&gt;</span></span><br><span class="line"><span class="regexp">总访客数&lt;span id="busuanzi_value_site_uv"&gt;&lt;/</span>span&gt;人次</span><br><span class="line">&lt;<span class="regexp">/span&gt;</span></span><br></pre></td></tr></table></figure><h2 id="添加字数统计和阅读时长功能"><a href="#添加字数统计和阅读时长功能" class="headerlink" title="添加字数统计和阅读时长功能"></a>添加字数统计和阅读时长功能</h2><p>1.安装 hexo-wordcount<br>在博客目录下打开Git Bash Here 输入命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure><p>2.文件配置<br>在theme\yilia\layout_partial\post下创建word.ejs文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=<span class="string">"margin-top:10px;"</span>&gt;</span><br><span class="line">    &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"post-time"</span>&gt;</span><br><span class="line">      &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"post-meta-item-icon"</span>&gt;</span><br><span class="line">        &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"fa fa-keyboard-o"</span>&gt;&lt;<span class="regexp">/i&gt;</span></span><br><span class="line"><span class="regexp">        &lt;span class="post-meta-item-text"&gt;  字数统计: &lt;/</span>span&gt;</span><br><span class="line">        &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"post-count"</span>&gt;&lt;%= wordcount(post.content) %&gt;字&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>span&gt;</span><br><span class="line">    &lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;span class="post-time"&gt;</span></span><br><span class="line"><span class="regexp">      &amp;nbsp; | &amp;nbsp;</span></span><br><span class="line"><span class="regexp">      &lt;span class="post-meta-item-icon"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;i class="fa fa-hourglass-half"&gt;&lt;/i</span>&gt;</span><br><span class="line">        &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"post-meta-item-text"</span>&gt;  阅读时长: &lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">        &lt;span class="post-count"&gt;&lt;%= min2read(post.content) %&gt;分&lt;/</span>span&gt;</span><br><span class="line">      &lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>span&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><p>然后在 themes/yilia/layout/_partial/article.ejs中添加</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"article-inner"</span>&gt;</span><br><span class="line">    &lt;% <span class="keyword">if</span> (post.link || post.title)&#123; %&gt;</span><br><span class="line">      &lt;header <span class="class"><span class="keyword">class</span></span>=<span class="string">"article-header"</span>&gt;</span><br><span class="line">        &lt;%- partial(<span class="string">'post/title'</span>, &#123;<span class="attr">class_name</span>: <span class="string">'article-title'</span>&#125;) %&gt;</span><br><span class="line">        &lt;% <span class="keyword">if</span> (!post.noDate)&#123; %&gt;</span><br><span class="line">        &lt;%- partial(<span class="string">'post/date'</span>, &#123;<span class="attr">class_name</span>: <span class="string">'archive-article-date'</span>, <span class="attr">date_format</span>: <span class="literal">null</span>&#125;) %&gt;</span><br><span class="line">        &lt;!-- 需要添加的位置 --&gt;</span><br><span class="line">        &lt;!-- 开始添加字数统计--&gt;</span><br><span class="line">        &lt;% <span class="keyword">if</span>(theme.word_count &amp;&amp; !post.no_word_count)&#123;%&gt;</span><br><span class="line">          &lt;%- partial(<span class="string">'post/word'</span>) %&gt;</span><br><span class="line">          &lt;% &#125; %&gt;</span><br><span class="line">        &lt;!-- 添加完成 --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;% &#125; %&gt;</span><br><span class="line">      &lt;<span class="regexp">/header&gt;</span></span><br></pre></td></tr></table></figure><p>3.开启功能<br>在站点的_config.yml中添加下面代码</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 是否开启字数统计</span></span><br><span class="line"><span class="comment">#不需要使用，直接设置值为false，或注释掉</span></span><br><span class="line"><span class="attr">word_count:</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><h2 id="添加背景音乐"><a href="#添加背景音乐" class="headerlink" title="添加背景音乐"></a>添加背景音乐</h2><ol><li>打开网易云音乐首页，然后搜索你要添加的背景音乐<a href="http://music.163.com/" target="_blank" rel="noopener">http://music.163.com/</a><img src="/Hexo%E4%B8%BB%E9%A2%98%E5%8F%98%E6%8D%A2%E4%B8%8E%E6%B7%BB%E5%8A%A0%E6%8F%92%E4%BB%B6/2020-03-12-21-16-59.png" class></li><li>搜索到歌曲点击生成外链播放器，进去下一个界面<img src="/Hexo%E4%B8%BB%E9%A2%98%E5%8F%98%E6%8D%A2%E4%B8%8E%E6%B7%BB%E5%8A%A0%E6%8F%92%E4%BB%B6/2020-03-12-21-17-30.png" class></li><li>复制外链播放器的代码<br>打开yilia主题下的<code>_partial</code>文件夹下的<code>left-col.ejs</code>文件复制文件内容到最下端笔者添加了一些判断和表达式</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!-- 网易云音乐插件 --&gt;</span><br><span class="line">&lt;% <span class="keyword">if</span> (theme.music &amp;&amp; theme.music.enable)&#123; %&gt;</span><br><span class="line">    &lt;div style=<span class="string">"position:absolute; bottom:120px left:auto; width:85%"</span>&gt;</span><br><span class="line">        &lt;iframe frameborder=<span class="string">"no"</span> border=<span class="string">"0"</span> marginwidth=<span class="string">"0"</span> marginheight=<span class="string">"0"</span> width=<span class="string">"240"</span> height=<span class="string">"52"</span> src=<span class="string">"//music.163.com/outchain/player?type=2&amp;id=&lt;%=theme.music.id||1334445174%&gt;&amp;auto=&lt;%=theme.music.autoplay?1:0%&gt;&amp;height=32"</span>&gt;&lt;<span class="regexp">/iframe&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><img src="/Hexo%E4%B8%BB%E9%A2%98%E5%8F%98%E6%8D%A2%E4%B8%8E%E6%B7%BB%E5%8A%A0%E6%8F%92%E4%BB%B6/2020-03-12-21-20-12.png" class><ol start="4"><li>在yilia主题配置文件中添加属性</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 网易云音乐插件</span></span><br><span class="line"><span class="attr">music:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#id: 1332647902  # 网易云分享的ID</span></span><br><span class="line">  <span class="attr">autoplay:</span> <span class="literal">true</span>  <span class="comment"># 是否开启自动播放</span></span><br></pre></td></tr></table></figure><h2 id="写作的一些说明"><a href="#写作的一些说明" class="headerlink" title="写作的一些说明"></a>写作的一些说明</h2><p>执行命令：hexo new “xxxx”创建Markdown文件，在博客的source_posts文件夹下<br>比如如下例子，<br>comments设置为true允许评论，若设置为false则不能评论<br>reward设置为true允许打赏，若设置为false则不能打赏，（注意对应主题的配置文件reward_type: 设置的为1）</p><img src="/Hexo%E4%B8%BB%E9%A2%98%E5%8F%98%E6%8D%A2%E4%B8%8E%E6%B7%BB%E5%8A%A0%E6%8F%92%E4%BB%B6/2020-03-12-21-10-01.png" class>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;更换主题Theme及基本配置&quot;&gt;&lt;a href=&quot;#更换主题Theme及基本配置&quot; class=&quot;headerlink&quot; title=&quot;更换主题Theme及基本配置&quot;&gt;&lt;/a&gt;更换主题Theme及基本配置&lt;/h1&gt;&lt;h2 id=&quot;更换主题&quot;&gt;&lt;a href=&quot;#更换主题&quot; class=&quot;headerlink&quot; title=&quot;更换主题&quot;&gt;&lt;/a&gt;更换主题&lt;/h2&gt;&lt;p&gt;默认主题是landscape，在themes文件夹下，可以使用别人开发好的主题，这里有很多，我使用的是这一个&lt;a href=&quot;https://github.com/litten/hexo-theme-yilia&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/litten/hexo-theme-yilia&lt;/a&gt;&lt;br&gt;下载之后放到themes文件夹下即可：git clone &lt;a href=&quot;mailto:git@github.com&quot;&gt;git@github.com&lt;/a&gt;:litten/hexo-theme-yilia.git&lt;/p&gt;
    
    </summary>
    
    
      <category term="环境搭建" scheme="https://linbei.top/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="随笔" scheme="https://linbei.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="阿里云" scheme="https://linbei.top/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="Hexo" scheme="https://linbei.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>VsCode编写Hexo支持的MD文档</title>
    <link href="https://linbei.top/vscode%E7%BC%96%E5%86%99md/"/>
    <id>https://linbei.top/vscode%E7%BC%96%E5%86%99md/</id>
    <published>2019-03-12T04:12:57.000Z</published>
    <updated>2020-05-23T01:20:25.658Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vscode编写markdown"><a href="#vscode编写markdown" class="headerlink" title="vscode编写markdown"></a>vscode编写markdown</h2><p>markdown是用hexo写博客的可选文本格式之一，通常我们用hexo new xxx来创建一篇新的post。md编辑器有很多，预览我们hexo项目中的md文章的方法也有很多，我的方案是编辑与预览都在vscode中完成。</p><p>这里要先提一下在hexo3.0版本中编写md文件时新的图片插入方式：只要在_config.yml中添加post_asset_folder: true，就会在生成新post时创建一个同名文件夹；在md中输入，就可以插入这个文件夹中的图片。(这种方式较之以前把图片放在source/images，方式更整洁，图片随文章分类)<br>vscode有很多md的插件，这里推荐两个插件，并针对hexo做一些配置调整，以满足插入图片与预览md的需求：</p><a id="more"></a><ol><li>粘贴图片Paste Image<img src="/vscode%E7%BC%96%E5%86%99md/2020-03-13-13-13-00.png" class>这个插件用来在md文档中粘贴图片，默认会在文档的同级目录下新建一个图片文件，并在md中插入一行相对路径的图片代码。迎合上述hexo的新图片插入方式，可以在vscode的user-settings里新增两条配置：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">"pasteImage.path": "$&#123;currentFileNameWithoutExt&#125;/",</span><br><span class="line">"pasteImage.insertPattern": "&#123;% asset_img $&#123;imageFileName&#125; %&#125;"</span><br></pre></td></tr></table></figure><p>这样以来，粘贴的图片就会保存到md文档的同名文件夹下，文档中将插入hexo asset语法的代码。<br>2. 预览Markdown Preview Enhanced</p><img src="/vscode%E7%BC%96%E5%86%99md/2020-03-13-13-14-28.png" class><p>这个是下载量最高的vscode md预览插件，支持很多功能，并支持扩展md解析语法。现在就要利用这个功能来解决一个问题：vscode内无法预览代码的图片。ctrl+shift+P输入Markdown Preview Enhanced: Extend Parser调出插件的parse.js文件，修改其中的onWillParseMarkdown方法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  onWillParseMarkdown: <span class="function"><span class="keyword">function</span>(<span class="params">markdown</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>)=&gt;</span> &#123;</span><br><span class="line">      markdown = markdown.replace(</span><br><span class="line">        /\&#123;%\s*asset_img\s*(.*)\s*%\&#125;/g,</span><br><span class="line">        (whole, content) =&gt; (<span class="string">`![](<span class="subst">$&#123;content&#125;</span>)`</span>)</span><br><span class="line">      )</span><br><span class="line">      <span class="keyword">return</span> resolve(markdown)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样以来，我们md中的代码就会在解析预览时被替换成md的图片语法，并且同样采用相对路径，图片预览成功。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;vscode编写markdown&quot;&gt;&lt;a href=&quot;#vscode编写markdown&quot; class=&quot;headerlink&quot; title=&quot;vscode编写markdown&quot;&gt;&lt;/a&gt;vscode编写markdown&lt;/h2&gt;&lt;p&gt;markdown是用hexo写博客的可选文本格式之一，通常我们用hexo new xxx来创建一篇新的post。md编辑器有很多，预览我们hexo项目中的md文章的方法也有很多，我的方案是编辑与预览都在vscode中完成。&lt;/p&gt;
&lt;p&gt;这里要先提一下在hexo3.0版本中编写md文件时新的图片插入方式：只要在_config.yml中添加post_asset_folder: true，就会在生成新post时创建一个同名文件夹；在md中输入，就可以插入这个文件夹中的图片。(这种方式较之以前把图片放在source/images，方式更整洁，图片随文章分类)&lt;br&gt;vscode有很多md的插件，这里推荐两个插件，并针对hexo做一些配置调整，以满足插入图片与预览md的需求：&lt;/p&gt;
    
    </summary>
    
    
      <category term="环境搭建" scheme="https://linbei.top/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="随笔" scheme="https://linbei.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="Hexo" scheme="https://linbei.top/tags/Hexo/"/>
    
      <category term="Vscode" scheme="https://linbei.top/tags/Vscode/"/>
    
  </entry>
  
  <entry>
    <title>3D旋转相册</title>
    <link href="https://linbei.top/3D%E6%97%8B%E8%BD%AC%E7%9B%B8%E5%86%8C/"/>
    <id>https://linbei.top/3D%E6%97%8B%E8%BD%AC%E7%9B%B8%E5%86%8C/</id>
    <published>2019-03-11T04:12:57.000Z</published>
    <updated>2020-05-23T02:09:32.649Z</updated>
    
    <content type="html"><![CDATA[<h1 id="方体旋转相册"><a href="#方体旋转相册" class="headerlink" title="方体旋转相册"></a>方体旋转相册</h1><p>首先我们来看一下效果图</p><img src="/3D%E6%97%8B%E8%BD%AC%E7%9B%B8%E5%86%8C/2020-03-11-11-36-38.png" class><a id="more"></a><p>接下来我们就干起来<br>新建一些文件夹如下图所示</p><img src="/3D%E6%97%8B%E8%BD%AC%E7%9B%B8%E5%86%8C/2020-03-11-11-38-20.png" class><p>其中img文件就是存放图片得文件夹，music存放得是背景音乐得文件夹，CSS存放得是样式文件<br>下面就来贴代码<br>CSS得代码如下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*最外层容器样式*/</span></span><br><span class="line"><span class="selector-class">.wrap</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">    <span class="comment">/*改变左右上下,图片方块移动*/</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*包裹所有容器样式*/</span></span><br><span class="line"><span class="selector-class">.cube</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(-<span class="number">30deg</span>) <span class="built_in">rotateY</span>(-<span class="number">80deg</span>);</span><br><span class="line">    <span class="attribute">-webkit-animation</span>: rotate <span class="number">40s</span> infinite;</span><br><span class="line">    <span class="comment">/*匀速*/</span></span><br><span class="line">    <span class="attribute">animation-timing-function</span>: linear;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> rotate&#123;</span><br><span class="line">    <span class="selector-tag">from</span>&#123;<span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">0deg</span>) <span class="built_in">rotateY</span>(<span class="number">0deg</span>);&#125;</span><br><span class="line">    <span class="selector-tag">to</span>&#123;<span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">360deg</span>) <span class="built_in">rotateY</span>(<span class="number">360deg</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line">    <span class="attribute">transition</span>: all .<span class="number">4s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*定义所有图片样式*/</span></span><br><span class="line"><span class="selector-class">.pic</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.out_front</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">0deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.out_back</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(-<span class="number">100px</span>) <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.out_left</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.out_right</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.out_top</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.out_bottom</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*定义小正方体样式*/</span></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: bloack;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.in_pic</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.in_front</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">0deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.in_back</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(-<span class="number">50px</span>) <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.in_left</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.in_right</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.in_top</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.in_bottom</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*鼠标移入后样式*/</span></span><br><span class="line"><span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_front</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">0deg</span>) <span class="built_in">translateZ</span>(<span class="number">200px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_back</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(-<span class="number">200px</span>) <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_left</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">200px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_right</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">200px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_top</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">200px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_bottom</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">200px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>html代码如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>css-3d旋转<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/index.css"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--/*外层最大容器*/--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    /*包裹所有元素的容器*/--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cube"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--前面图片 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"out_front"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/1.jpg"</span>  <span class="attr">class</span>=<span class="string">"pic"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--后面图片 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"out_back"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/2.jpg"</span>  <span class="attr">class</span>=<span class="string">"pic"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--左图片 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"out_left"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/3.jpg"</span>  <span class="attr">class</span>=<span class="string">"pic"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"out_right"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/4.jpg"</span>  <span class="attr">class</span>=<span class="string">"pic"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"out_top"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/5.jpg"</span>  <span class="attr">class</span>=<span class="string">"pic"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"out_bottom"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/6.jpg"</span>  <span class="attr">class</span>=<span class="string">"pic"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--小正方体 --&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"in_front"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/7.jpg"</span> <span class="attr">class</span>=<span class="string">"in_pic"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"in_back"</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/8.jpg"</span> <span class="attr">class</span>=<span class="string">"in_pic"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"in_left"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/9.jpg"</span> <span class="attr">class</span>=<span class="string">"in_pic"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"in_right"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/10.jpg"</span> <span class="attr">class</span>=<span class="string">"in_pic"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"in_top"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/11.jpg"</span> <span class="attr">class</span>=<span class="string">"in_pic"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"in_bottom"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/12.jpg"</span> <span class="attr">class</span>=<span class="string">"in_pic"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">"music/你的答案.mp3"</span> <span class="attr">preload</span>=<span class="string">"meta"</span> <span class="attr">loop</span> <span class="attr">autoplay</span> <span class="attr">id</span>=<span class="string">"bgmusic"</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> bgmusic = <span class="built_in">document</span>.getElementById(<span class="string">'bgmusic'</span>);</span></span><br><span class="line"><span class="actionscript">    bgmusic.addEventListener(<span class="string">'canplay'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.play();</span></span><br><span class="line"><span class="actionscript">    &#125;, <span class="literal">false</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.addEventListener(<span class="string">'load'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.addEventListener(<span class="string">'touchstart'</span>, once, <span class="literal">false</span>);</span></span><br><span class="line"><span class="actionscript">    &#125;, <span class="literal">false</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">once</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">        bgmusic.play();</span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.removeEventListener(<span class="string">'touchstart'</span>, once, <span class="literal">false</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>要做得就是把上面图片得名字改成自己文件夹下得文件名就好了<br>下载一首音乐放入music文件夹中，把html中的音乐文件名换成自己的音乐名就OK了<br>大功告成了，就双击html文件在浏览器中打开。当然这里会出现一点问题，就是背景音乐没有自动播放。这是浏览器的限制，像谷歌浏览器默认是不允许自动播放的，我们可以更改一下默认设置为允许。如谷歌浏览器，输入(chrome://flags/#autoplay-policy)出现如下界面</p><img src="/3D%E6%97%8B%E8%BD%AC%E7%9B%B8%E5%86%8C/2020-03-11-11-46-14.png" class><p>把Autoplaypolicy设为允许，这样背景音乐就可以自动播放了</p><h1 id="旋转相册"><a href="#旋转相册" class="headerlink" title="旋转相册"></a>旋转相册</h1><p>先来看一下效果图</p><img src="/3D%E6%97%8B%E8%BD%AC%E7%9B%B8%E5%86%8C/2020-03-11-11-50-19.png" class><p>步骤和上面类似，或者相对来说更简单<br>建立如下图所示的文件夹<img src="/3D%E6%97%8B%E8%BD%AC%E7%9B%B8%E5%86%8C/2020-03-11-11-51-14.png" class><br>img文件夹放入你想展示的图片，music文件夹放入背景音乐文件，接下来所有的代码都在如下的html中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>旋转相册<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">body,div,p,ul,ol,li,dl,dt,dd,table,tr,td,form,hr,fieldset,h1,h2,h3,h4,h5,h6,img,input&#123;</span><br><span class="line"><span class="css"><span class="selector-tag">margin</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">padding</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">body&#123;</span><br><span class="line">background: black;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.content</span>&#123;</span></span><br><span class="line">width: 200px;</span><br><span class="line">height: 150px;</span><br><span class="line">position: relative;</span><br><span class="line"><span class="css"><span class="selector-tag">margin</span><span class="selector-pseudo">:200px</span> <span class="selector-tag">auto</span> 0;</span></span><br><span class="line">perspective: 1500px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span>&#123;</span></span><br><span class="line">width: 200px;</span><br><span class="line">height: 150px;</span><br><span class="line">transform-style: preserve-3d;</span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:rotateX(-30deg)</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">animation</span><span class="selector-pseudo">:photo</span> 45<span class="selector-tag">s</span> <span class="selector-tag">linear</span> <span class="selector-tag">infinite</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">animation</span><span class="selector-pseudo">:photo</span> 45<span class="selector-tag">s</span> <span class="selector-tag">linear</span> <span class="selector-tag">infinite</span> <span class="selector-tag">paused</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">img</span>&#123;</span></span><br><span class="line">width: 200px;</span><br><span class="line">height: 150px;</span><br><span class="line">position: absolute;</span><br><span class="line">left: 0;</span><br><span class="line">top: 0;</span><br><span class="line">transform-style: preserve-3d;</span><br><span class="line">transition: all 1s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child(1)</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:translateZ(280px)</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child(2)</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:rotateY(40deg)</span> <span class="selector-tag">translateZ</span>(280<span class="selector-tag">px</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child(3)</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:rotateY(80deg)</span> <span class="selector-tag">translateZ</span>(280<span class="selector-tag">px</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child(4)</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:rotateY(120deg)</span> <span class="selector-tag">translateZ</span>(280<span class="selector-tag">px</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child(5)</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:rotateY(160deg)</span> <span class="selector-tag">translateZ</span>(280<span class="selector-tag">px</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child(6)</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:rotateY(200deg)</span> <span class="selector-tag">translateZ</span>(280<span class="selector-tag">px</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child(7)</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:rotateY(240deg)</span> <span class="selector-tag">translateZ</span>(280<span class="selector-tag">px</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child(8)</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:rotateY(280deg)</span> <span class="selector-tag">translateZ</span>(280<span class="selector-tag">px</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child(9)</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:rotateY(320deg)</span> <span class="selector-tag">translateZ</span>(280<span class="selector-tag">px</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child(1)</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:translateZ(280px)</span> <span class="selector-tag">scale</span>(1<span class="selector-class">.2</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child(2)</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:rotateY(40deg)</span> <span class="selector-tag">translateZ</span>(280<span class="selector-tag">px</span>) <span class="selector-tag">scale</span>(1<span class="selector-class">.2</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child(3)</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:rotateY(80deg)</span> <span class="selector-tag">translateZ</span>(280<span class="selector-tag">px</span>) <span class="selector-tag">scale</span>(1<span class="selector-class">.2</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child(4)</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:rotateY(120deg)</span> <span class="selector-tag">translateZ</span>(280<span class="selector-tag">px</span>) <span class="selector-tag">scale</span>(1<span class="selector-class">.2</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child(5)</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:rotateY(160deg)</span> <span class="selector-tag">translateZ</span>(280<span class="selector-tag">px</span>) <span class="selector-tag">scale</span>(1<span class="selector-class">.2</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child(6)</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:rotateY(200deg)</span> <span class="selector-tag">translateZ</span>(280<span class="selector-tag">px</span>) <span class="selector-tag">scale</span>(1<span class="selector-class">.2</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child(7)</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:rotateY(240deg)</span> <span class="selector-tag">translateZ</span>(280<span class="selector-tag">px</span>) <span class="selector-tag">scale</span>(1<span class="selector-class">.2</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child(8)</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:rotateY(280deg)</span> <span class="selector-tag">translateZ</span>(280<span class="selector-tag">px</span>) <span class="selector-tag">scale</span>(1<span class="selector-class">.2</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child(9)</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:rotateY(320deg)</span> <span class="selector-tag">translateZ</span>(280<span class="selector-tag">px</span>) <span class="selector-tag">scale</span>(1<span class="selector-class">.2</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="css"><span class="keyword">@keyframes</span> photo&#123;</span></span><br><span class="line">0%&#123;</span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:rotateX(-30deg)</span> <span class="selector-tag">rotateY</span>(0<span class="selector-tag">deg</span>);</span></span><br><span class="line">&#125;</span><br><span class="line">100%&#123;</span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:rotateX(-30deg)</span> <span class="selector-tag">rotateY</span>(360<span class="selector-tag">deg</span>);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/3.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/4.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/5.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/6.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/7.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/8.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/9.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">"music/你的答案.mp3"</span> <span class="attr">preload</span>=<span class="string">"meta"</span> <span class="attr">loop</span> <span class="attr">autoplay</span> <span class="attr">id</span>=<span class="string">"bgmusic"</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> bgmusic = <span class="built_in">document</span>.getElementById(<span class="string">'bgmusic'</span>);</span></span><br><span class="line"><span class="actionscript">    bgmusic.addEventListener(<span class="string">'canplay'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.play();</span></span><br><span class="line"><span class="actionscript">    &#125;, <span class="literal">false</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.addEventListener(<span class="string">'load'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.addEventListener(<span class="string">'touchstart'</span>, once, <span class="literal">false</span>);</span></span><br><span class="line"><span class="actionscript">    &#125;, <span class="literal">false</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">once</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">        bgmusic.play();</span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.removeEventListener(<span class="string">'touchstart'</span>, once, <span class="literal">false</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>同样把代码里的图片文件和音乐文件改成你自己的就好了</p><h1 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h1><p>可以把俩个页面录制成小视频，再通过一些视频编辑软件添加字幕，添加背景音乐，再添加点效果，就能做出非常有意义的小视频了。本人用的视频编辑用的是剪映，很方便。个人觉得剪一些小的视频用不到Pr那么大的软件。</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=89824746&cid=153414806&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width:100%; height:100%; Left:0; top:0;"> </iframe></div>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;方体旋转相册&quot;&gt;&lt;a href=&quot;#方体旋转相册&quot; class=&quot;headerlink&quot; title=&quot;方体旋转相册&quot;&gt;&lt;/a&gt;方体旋转相册&lt;/h1&gt;&lt;p&gt;首先我们来看一下效果图&lt;/p&gt;
&lt;img src=&quot;/3D%E6%97%8B%E8%BD%AC%E7%9B%B8%E5%86%8C/2020-03-11-11-36-38.png&quot; class&gt;
    
    </summary>
    
    
      <category term="前端" scheme="https://linbei.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="CSS" scheme="https://linbei.top/tags/CSS/"/>
    
      <category term="随笔" scheme="https://linbei.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>基于阿里云CentOs博客搭建</title>
    <link href="https://linbei.top/%E5%9F%BA%E4%BA%8E%E9%98%BF%E9%87%8C%E4%BA%91CentOs%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <id>https://linbei.top/%E5%9F%BA%E4%BA%8E%E9%98%BF%E9%87%8C%E4%BA%91CentOs%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</id>
    <published>2019-03-11T04:12:57.000Z</published>
    <updated>2020-05-23T01:20:25.658Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基于CentOS-环境"><a href="#基于CentOS-环境" class="headerlink" title="基于CentOS 环境"></a>基于CentOS 环境</h1><p>总共就是客户端和服务端以及阿里云的配置</p><h1 id="阿里云"><a href="#阿里云" class="headerlink" title="阿里云:"></a>阿里云:</h1><a id="more"></a><img src="/%E5%9F%BA%E4%BA%8E%E9%98%BF%E9%87%8C%E4%BA%91CentOs%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/2020-03-11-10-04-12.png" class><img src="/%E5%9F%BA%E4%BA%8E%E9%98%BF%E9%87%8C%E4%BA%91CentOs%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/2020-03-11-10-08-59.png" class><p>配置完毕,端口一定要开放</p><h1 id="第一部分-服务器环境搭建，包括安装-Git-、Nginx配置-、创建-git-用户"><a href="#第一部分-服务器环境搭建，包括安装-Git-、Nginx配置-、创建-git-用户" class="headerlink" title="第一部分: 服务器环境搭建，包括安装 Git 、Nginx配置 、创建 git 用户"></a>第一部分: 服务器环境搭建，包括安装 Git 、Nginx配置 、创建 git 用户</h1><p>安装git和nodejs</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">安装NodeJS</span></span><br><span class="line">curl --silent --location https://rpm.nodesource.com/setup_5.x | bash -</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">adduser git</span><br><span class="line">chmod 740 /etc/sudoers</span><br><span class="line">vim /etc/sudoers</span><br><span class="line"></span><br><span class="line">找到以下内容</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Allow root to run any commands anywhere</span></span></span><br><span class="line">root    ALL=(ALL)    ALL</span><br><span class="line"></span><br><span class="line">在下面添加一行</span><br><span class="line"></span><br><span class="line">git ALL=(ALL) ALL</span><br></pre></td></tr></table></figure><p>如图:</p><img src="/%E5%9F%BA%E4%BA%8E%E9%98%BF%E9%87%8C%E4%BA%91CentOs%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/2020-03-11-10-21-37.png" class><p>保存退出后改回权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 400 /etc/sudoers</span><br></pre></td></tr></table></figure><p>随后设置Git用户的密码，</p><h1 id="需要root权限"><a href="#需要root权限" class="headerlink" title="需要root权限"></a>需要root权限</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd git</span><br></pre></td></tr></table></figure><p>切换至git用户，创建 ~/.ssh 文件夹和 ~/.ssh/authorized_keys 文件，并赋予相应的权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">su git</span><br><span class="line">mkdir ~/.ssh</span><br><span class="line">vim ~/.ssh/authorized_keys</span><br><span class="line"><span class="meta">#</span><span class="bash">然后将电脑中执行 cat ~/.ssh/id_rsa.pub | pbcopy ,将公钥复制粘贴到authorized_keys</span></span><br><span class="line">chmod 600 ~/.ssh/authorzied_keys</span><br><span class="line">chmod 700 ~/.ssh</span><br></pre></td></tr></table></figure><p>然后再客户端(电脑上),执行ssh -v git@ip地址(就是你阿里云的外网地址) ,应该就能免密登陆了</p><h1 id="接下来安装Nginx和配置"><a href="#接下来安装Nginx和配置" class="headerlink" title="接下来安装Nginx和配置"></a>接下来安装Nginx和配置</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">安装:</span><br><span class="line">yum install nginx</span><br><span class="line"></span><br><span class="line">启动:</span><br><span class="line">1.systemctl start nginx</span><br><span class="line">2.systemctl enable nginx</span><br></pre></td></tr></table></figure><p>然后把服务器的公网地址输入浏览器, 出现下面的图片就对了,没出来就有问题</p><img src="/%E5%9F%BA%E4%BA%8E%E9%98%BF%E9%87%8C%E4%BA%91CentOs%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/2020-03-11-10-27-22.png" class><h2 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/conf.d/default.conf</span><br></pre></td></tr></table></figure><p>依照下图进行修改，将“/usr/share/nginx/html”改为“/usr/share/nginx/html/blog”。</p><img src="/%E5%9F%BA%E4%BA%8E%E9%98%BF%E9%87%8C%E4%BA%91CentOs%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/2020-03-11-10-28-28.png" class><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /usr/share/nginx/html/blog</span><br><span class="line">sudo chown -R git:git /usr/share/nginx/html/blog</span><br></pre></td></tr></table></figure><p>这样上面的地址就算对应上了</p><p>在服务器上初始化一个git裸库<br>切换到git用户，然后切换到git用户目录，接着初始化裸库，代码如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su git</span><br><span class="line">cd ~</span><br><span class="line">git init --bare blog.git</span><br></pre></td></tr></table></figure><p>接着新建一个post-receive文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure><p>然后在该文件中输入以下内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">！/bin/sh</span></span><br><span class="line">git --work-tree=/usr/share/nginx/html/blog --git-dir=/home/git/blog.git checkout -f</span><br></pre></td></tr></table></figure><p>保存退出之后，再输入以下代码，赋予该文件可执行权限。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x ~/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure><h1 id="第二部分-本地Hexo初始化，-包括安装-NodeJS-、hexo-cli-生成本地静态网站"><a href="#第二部分-本地Hexo初始化，-包括安装-NodeJS-、hexo-cli-生成本地静态网站" class="headerlink" title="第二部分: 本地Hexo初始化， 包括安装 NodeJS 、hexo-cli, 生成本地静态网站"></a>第二部分: 本地Hexo初始化， 包括安装 NodeJS 、hexo-cli, 生成本地静态网站</h1><p>##初始化Hexo博客<br>首先要安装 hexo-cli，安装hexo-cli 需要 root 权限，使用 sudo 运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>然后初始化Hexo程序</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/Documents</span><br><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><p>等执行成功以后安装两个插件， hexo-deployer-git 和 hexo-server ,这俩插件的作用分别是使用Git自动部署，和本地简单的服务器。<br><a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">hexo-deployer-git帮助文档</a><br><a href="https://hexo.io/zh-cn/docs/server.html" target="_blank" rel="noopener">hexo-server帮助文档</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd blog</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-server</span><br></pre></td></tr></table></figure><h2 id="初始化Nodejs"><a href="#初始化Nodejs" class="headerlink" title="初始化Nodejs"></a>初始化Nodejs</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install nodejs</span><br></pre></td></tr></table></figure><p>生成自己的第一篇文章 hello world !<br>使用 hexo new &lt;文章名称&gt; 来新建文章，该命令会成成一个 .md文件放置在 sources/_posts文件夹。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new "hello Hexo"</span><br><span class="line">vim sources/_posts/hello-hexo.md</span><br></pre></td></tr></table></figure><p>编辑完毕以后， 使用hexo g将 .md文件渲染成静态文件，然后启动hexo-server：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>现在便可以打开浏览器访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 来查看我们的博客了！<br>然后停掉</p><h2 id="配置-config-yml-完成自动化部署"><a href="#配置-config-yml-完成自动化部署" class="headerlink" title="配置_config.yml,完成自动化部署"></a>配置_config.yml,完成自动化部署</h2><p>然后打开~/Documents/blog/_config.yml 找到 deploy</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repo: git@SERVER:/home/git/blog.git       #此处的SERVER需改为你自己服务器的ip</span><br><span class="line">    branch: master                            #这里填写分支</span><br><span class="line">    message:                                  #提交的信息</span><br></pre></td></tr></table></figure><img src="/%E5%9F%BA%E4%BA%8E%E9%98%BF%E9%87%8C%E4%BA%91CentOs%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/2020-03-11-10-39-23.png" class><p>保存后，尝试将我们刚才写的”hello hexo”部署到服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate --deploy</span><br></pre></td></tr></table></figure><p>访问服务器地址，就可以看到我们写的文章”Hello hexo”,以后写文章只需要：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new "Blog article name"</span><br><span class="line">···写文章</span><br><span class="line">hexo clean &amp;&amp; hexo generate --deploy</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基于CentOS-环境&quot;&gt;&lt;a href=&quot;#基于CentOS-环境&quot; class=&quot;headerlink&quot; title=&quot;基于CentOS 环境&quot;&gt;&lt;/a&gt;基于CentOS 环境&lt;/h1&gt;&lt;p&gt;总共就是客户端和服务端以及阿里云的配置&lt;/p&gt;
&lt;h1 id=&quot;阿里云&quot;&gt;&lt;a href=&quot;#阿里云&quot; class=&quot;headerlink&quot; title=&quot;阿里云:&quot;&gt;&lt;/a&gt;阿里云:&lt;/h1&gt;
    
    </summary>
    
    
      <category term="环境搭建" scheme="https://linbei.top/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="随笔" scheme="https://linbei.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="阿里云" scheme="https://linbei.top/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="Hexo" scheme="https://linbei.top/tags/Hexo/"/>
    
      <category term="Ngnix" scheme="https://linbei.top/tags/Ngnix/"/>
    
  </entry>
  
</feed>
